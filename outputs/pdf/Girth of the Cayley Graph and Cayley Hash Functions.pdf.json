{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Cayley hash functions"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Using pairs of semigroup elements to hash bits",
    "Cayley graphs",
    "Matrix semigroups",
    "Joint spectral radius"
  ],
  "results": [
    "Cayley hash functions with high girth",
    "Cayley hashing with cookies",
    "Improved preimage resistance"
  ],
  "title": "Girth of the Cayley Graph and Cayley Hash Functions.pdf",
  "abstract": "The main advantage of Cayley hash functions compared to, say, hash functions in the SHA family is that when an already hashed document is amended, one does not have to hash the whole amended document all over again, but rather hash just the amended part and then multiply the result by the hash of the original document. In this article, we survey some of the previously proposed Cayley hash functions and single out a very simple hash function whose security has not been compromised up to date. Introduction Hash functions are easy-to-compute compression functions that take a variable-length input and convert it to a fixed-length output. Hash functions are used as compact representations, or digital fingerprints, of data and to provide message integrity. Cryptographic hash functions have many information-security applications, notably in digital signatures, message authentication codes, and other forms of authentication. Cryptographic hash functions should satisfy the following basic security requirements: (1) Collision resistance: it should be computationally infeasible to find two different inputs that hash to the same output. (2) Preimage resistance (sometimes called non-invertibility): it should be computationally infeasible to find an input which hashes to a specified output. (3) Second preimage resistance: it should be computationally infeasible to find a second input that hashes to the same output as a specified input. A challenging problem is to determine mathematical properties of a hash function that would ensure (or at least, make it likely) that the requirements above are met. A direction that has been gaining momentum lately is using a pair of elements, A and B, of a semigroup S, to hash the \u201c0\" and the \u201c1\" bit, respectively. Then a bit string is hashed to a product of elements in the natural way. For example, the bit string 1001011 will be hashed to the element BAABABB. Since hashing a random bit string this way represents a random walk on the Cayley graph of the subsemigroup of S generated by the elements A and B, hash functions of this kind are often called Cayley hash functions. Note that the absence of short collisions for a Cayley hash function is equivalent to the corresponding Cayley graph having a large girth. The latter is defined as the length of the shortest simple circuit. Cayley hash functions have a homomorphic property H (XY ) = H (X )H (Y ) and the associativity property H (XY Z) = H (XY )H (Z) = H (X )H (Y Z) for any bit strings X,Y,Z. (Here XY means concatenation of the bit strings X and Y .) This property is useful not only because it allows for parallel computations when hashing a long bit string. A more important feature is: when an already hashed document is amended, one does not have to hash the whole amended document all over again, but rather hash just the amended part and then multiply the result by the hash of the original document. Another useful property of a Cayley hash function is that, unlike with some other hash functions, you do not have to know the length of a bit string to be hashed up front; you can hash \u201cas you go\". While the high-level idea of Cayley hashing is definitely appealing, the choice of the platform semigroup S and two elements A,B \u2208S is crucial for security and efficiency. There have been many proposals based on matrix semigroups in GL2(\ud835\udd3d) for various fields \ud835\udd3d, in particular for \ud835\udd3d= \ud835\udd3dp. This is because Cayley graphs of 2-generator semigroups in GL2(\ud835\udd3dp) often have a large girth as was shown by several authors, see e.g. [1], [2], [3], [4]. Cayley graphs of (semi)groups in GLn(\ud835\udd3dp) with n > 2 have been considered, too (see e. g. [6]), but we will arXiv:2502.13197v1 [cs.CR] 18 Feb 2025"
}