{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Hardware Security",
    "Logic Locking",
    "Confidentiality Assessment"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Path Sensitization",
    "ATPG",
    "Cryptographic Benchmarks"
  ],
  "results": [
    "Up to 73.83% of the encryption key can be compromised by modifying the logic locking key",
    "Up to 25% of the encryption key can be compromised by the D-MUX algorithm"
  ],
  "title": "The Impact of Logic Locking on Confidentiality an Automated Evaluation.pdf",
  "abstract": "\u2014Logic locking secures hardware designs in untrusted foundries by incorporating key-driven gates to obscure the original blueprint. While this method safeguards the integrated circuit from malicious alterations during fabrication, its influence on data confidentiality during runtime has been ignored. In this study, we employ path sensitization to formally examine the impact of logic locking on confidentiality. By applying three representative logic locking mechanisms on open-source cryptographic benchmarks, we utilize an automatic test pattern generation framework to evaluate the effect of locking on crypto- graphic encryption keys and sensitive data signals. Our analysis reveals that logic locking can inadvertently cause sensitive data leakage when incorrect logic locking keys are used. We show that a single malicious logic locking key can expose over 70% of an encryption key. If an adversary gains control over other inputs, the entire encryption key can be compromised. This research uncovers a significant security vulnerability in logic locking and emphasizes the need for comprehensive security assessments that extend beyond key-recovery attacks. I. INTRODUCTION Modern Integrated Circuit (IC) supply chains rely on third- party design houses and foundries, which expose hardware design descriptions to external parties. Thus, one needs to prevent reverse engineering and malicious modifications by rogue entities, in a cost-effective way. While logic locking was initially conceived to safeguard ICs within the hardware supply chain against Intellectual Property (IP) piracy, subse- quent research has explored its potential in thwarting reverse engineering and preventing malicious modifications to ICs with notable success [1], [2]. Logic-locking techniques address these threats, with the first commercially available logic-locked RISC-V processor, the \u201cMade in Germany RISC-V (MiG-V),\u201d demonstrating its applicability in an industrial setting [3], [4]. The core principle of logic locking is to make the hardware design\u2019s functionality dependent on a secret logic locking key. Additional hardware, such as adders, XOR gates, or multiplexers, is incorporated into the IP, with the aim of distorting the design\u2019s functionality when applying the wrong logic locking key. The design is forwarded in the supply chain without the key. As the key is concealed from the untrusted parties, the IP\u2019s behavior cannot be easily derived from the hardware description, preventing the incorporation of malicious modifications within obscured segments of the hardware\u2019s functionality. However, as logic locking introduces additional hardware adaptations, the previously enforced properties can be endan- IC (a) not logic locked -IC (b) locked, correct key -IC (c) locked, malign key Fig. 1: A logic-locked IC has the same functionality as its not-locked version (a) using the correct logic-locking key (b). The same functionality connotes the absence of direct data leakages. Misusing the logic-locking hardware with a malign key can cause sensitive data leakages (c). gered. By applying an \u201cincorrect\u201d logic locking key, the chip does not function as intended. Depending on the mechanics of the logic locking scheme, new signal paths or operations are added into the circuit. Thus, applying the \u201cincorrect\u201d key can activate undesired behavior, or introduce inadmissible data leakage paths as depicted in Fig. 1. These additional paths can impose a major security vulnerability. In a recent inves- tigation, a manual security inspection uncovered exploitable vulnerabilities in the MiG-V\u2019s logic locking hardware that lead to sensitive encryption key leakage [5]. These findings indicate that logic locking can create unintentional attack paths on sensitive components within hardware design. To advance beyond manual inspection methods, we develop an automated approach to analyze how logic locking schemes affect information flow in hardware designs. We conduct this investigation using cryptographic circuits as benchmarks, given their fundamental role in protecting sensitive data. We determine whether specific input sequences could leak the encryption key to the primary outputs of the design1. This analysis is conducted before and after applying logic locking to the benchmarks, with the aim of determining if \u201cincorrect\u201d logic locking keys could be exploited to disclose sensitive data, e.g., cryptographic keys. The key contributions of this work are 1The encryption key is used for data encryption/decryption and is distinct from the logic-locking key. arXiv:2502.01240v2 [cs.CR] 12 Feb 2025"
}