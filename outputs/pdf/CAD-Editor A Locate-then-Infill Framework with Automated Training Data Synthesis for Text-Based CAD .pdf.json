{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Text-based CAD Editing"
  ],
  "datasets": [
    "DeepCAD"
  ],
  "methods": [
    "Locate-then-Infill Framework",
    "Automated Data Synthesis Pipeline",
    "Large Vision-Language Models (LVLMs)",
    "Large Language Models (LLMs)",
    "Stepwise Captioning Strategy"
  ],
  "results": [
    "High Valid Ratio (95.6%)",
    "Good Edit Consistency",
    "Good Realism",
    "Superior to Baselines"
  ],
  "title": "CAD-Editor A Locate-then-Infill Framework with Automated Training Data Synthesis for Text-Based CAD .pdf",
  "abstract": "Computer Aided Design (CAD) is indispensable across various industries. Text-based CAD editing, which automates the modification of CAD models based on textual instructions, holds great poten- tial but remains underexplored. Existing methods primarily focus on design variation generation or text-based CAD generation, either lacking support for text-based control or neglecting existing CAD models as constraints. We introduce CAD-Editor, the first framework for text-based CAD editing. To address the challenge of demanding triplet data with accurate correspondence for training, we propose an automated data synthesis pipeline. This pipeline utilizes design variation models to generate pairs of original and edited CAD mod- els and employs Large Vision-Language Models (LVLMs) to summarize their differences into edit- ing instructions. To tackle the composite nature of text-based CAD editing, we propose a locate- then-infill framework that decomposes the task into two focused sub-tasks: locating regions re- quiring modification and infilling these regions with appropriate edits. Large Language Models (LLMs) serve as the backbone for both sub-tasks, leveraging their capabilities in natural language understanding and CAD knowledge. Experiments show that CAD-Editor achieves superior perfor- mance both quantitatively and qualitatively. 1. Introduction In the modern digital era, Computer-Aided Design (CAD) has become indispensable across industries. Most modern CAD tools follow the Sketch-and-Extrude (SE) Opera- tions paradigm (Shahin, 2008; Camba et al., 2016), where \u2020 Work done during the internship at Microsoft Research Asia. The paper is the result of an open-source research project starting from March 2024. 1University of Science and Technology of China 2Microsoft Research Asia. Correspondence to: Shizhao Sun <shizsu@microsoft.com>. Preprint. Under review. designers sketch 2D curves to define the outer and inner boundaries of profiles, extrude them into 3D shapes, and combine these shapes to create complex models. CAD model creation is an iterative process, where an initial draft undergoes multiple modifications until it aligns with user requirements. Natural language plays a crucial role throughout this process, serving as a key medium of com- munication. For non-experts, it offers the most intuitive way to express their needs, while for professionals, it enables fast, detailed, and precise instructions. Consequently, a sys- tem capable of automatically editing CAD models based on textual instructions \u2013 known as text-based CAD edit- ing (Figure 1) \u2013 has the potential to revolutionize the entire CAD design workflow. Such a system could significantly accelerate CAD model development and empower a broader range of individuals, especially those with limited design expertise, to create CAD models more effectively. While important, text-based CAD editing receives limited attention. Some studies explore design variation generation, where new CAD models are generated by randomly alter- ing components of an existing model (Wu et al., 2021; Xu et al., 2022; 2023; Zhang et al., 2024b). However, these ap- proaches lack support for text-based control over the appear- ance of the generated CAD models, limiting their practical usability. Another line of research makes initial attempts at text-based CAD generation, focusing on generating new CAD models directly from textual descriptions (Khan et al., 2024b). Nonetheless, these methods do not incorporate an existing CAD model as input, which prevents them from leveraging the original design\u2019s context and constraints. Text-based CAD editing presents several distinct challenges. First, training for this task requires triplet data with accu- rate correspondence among an original CAD model, an editing instruction and an edited CAD model. However, such data does not naturally exist, and manually collection is both costly and difficult to scale. Second, text-based CAD editing is inherently a composite problem. It demands a comprehensive understanding of the textual description, the ability to locate the corresponding parts within the intricate structure of the CAD\u2019s SE operations, and the capability to generate concrete modifications to these SE operations. 1 arXiv:2502.03997v1 [cs.CV] 6 Feb 2025"
}