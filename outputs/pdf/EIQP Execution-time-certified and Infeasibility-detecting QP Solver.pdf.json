{
  "code_links": [
    "https://github.com/liangwu2019/EIQP"
  ],
  "tasks": [
    "Quadratic programming",
    "Execution time certificate",
    "Infeasibility detection",
    "Model predictive control",
    "Control barrier function"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Infeasible interior-point method (IPM)",
    "Homogeneous formulation",
    "Full Newton step"
  ],
  "results": [
    "O(\u221an) iteration complexity",
    "Exact iteration complexity",
    "Data independent iteration complexity"
  ],
  "title": "EIQP Execution-time-certified and Infeasibility-detecting QP Solver.pdf",
  "abstract": "\u2014Solving real-time quadratic programming (QP) is a ubiquitous task in control engineering, such as in model predictive control and control barrier function-based QP. In such real-time scenarios, certifying that the employed QP algorithm can either return a solution within a predefined level of optimality or detect QP infeasibility before the predefined sampling time is a pressing requirement. This article considers convex QP and adopts its homogeneous formulation to achieve infeasibility detection. Exploiting this homogeneous formulation, this article proposes a novel infeasible interior-point method (IPM) algo- rithm with the best theoretical O(\u221an) iteration complexity that feasible IPM algorithms enjoy. The iteration complexity is proved to be exact (rather than an upper bound), simple to calculate, and data independent, with the value \u0018 log( n+1 \u03f5 ) \u2212log(1\u22120.414213 \u221an+1 ) \u0019 (where n and \u03f5 denote the number of constraints and the predefined optimality level, respectively), making it appealing to certify the execution time of online time-varying convex QPs. The proposed algorithm is simple to implement without requiring a line search procedure (uses the full Newton step), and its C-code implementation (offering MATLAB, Julia, and Python interfaces) and numerical examples are publicly available at https://github.com/liangwu2019/EIQP. Index Terms\u2014Quadratic programming, execution time cer- tificate, infeasibility detection, model predictive control, control barrier function. I. INTRODUCTION Like solving a linear system, solving a quadratic program- ming (QP) problem has also been ubiquitous and extensively used including in finance, machine learning, operations, com- puter vision, energy, transportation, bioinformatics, signal pro- cessing, robotics, and control. For example, i) model predictive control (MPC), which formulates a receding horizon control problem as a QP that is solved at each sampling time, has been widely spread in the industry for controlling multivariable systems subject to constraints [1] and ii) CLF-CBF-QP [2], a control framework that combines stability (via control Lya- punov function) and safety (via control barrier functions) into a real-time QP, has been widely used in autonomous systems. Specifically regarding applications, i) the quadrotor maneu- vering field has a well-known QP-based framework [3] for generating minimum snap trajectories with smooth transitions through waypoints while satisfying constraints on velocities, accelerations, and inputs; ii) the robotics field often uses QP as a unified framework for task-space control paradigms [4], [5]. All these QPs fall into the categories of online, as they are required to be executed in real time, in contrast to the offline QPs, which do not have this requirement. Solving real-time QPs poses a pressing and open challenge for algorithms: how to guarantee that the QP algorithm 1Massachusetts Institute of Technology, Cambridge, MA 02139, USA, {liangwu,weixy,braatz}@mit.edu can return the optimal solution or detect infeasibility before the predefined sampling (or feedback) time. This is called the execution time certificate problem. Without the execution time certificate, control signals (the backup control signal if detecting QP infeasibility) fail to return on time, which renders the system open-loop and potentially leads to safety concerns, especially in safety-critical process systems. Certifying the execution time of QP algorithms can be reduced to certifying the number of iterations of QP algo- rithms if each iteration performs a fixed number of floating- point operations ([flops]). In fact, nearly all QP solvers have default settings that specify a maximum number of iterations, seemingly addressing the worst-case execution time certificate problem. However, this is a cheating approach for addressing execution time certificate problem, because it can not guaran- tee that all returned solutions have the same level of optimality. An execution-time-certified QP algorithm should precisely be defined as one that either returns an optimality-certified solution (within a predefined level of optimality) or detects QP infeasibility before the predefined sampling time. First of all, the stability and safety guarantee of MPC and CLF- CBF-QP control frameworks both assume that the QP at each sampling time is exactly solved, in other words, the QP solution should be optimality-certified. Second, the optimality- certified QP solution is also pursued in practice. When the plant suffers a sudden disturbance, MPC often requires that the QP algorithm runs more iterations at this time instant to ensure good performance. For example, in the case of an autonomous car or drone making a sharp turn, if the MPC- based QP does not run enough iterations, an autonomous car or drone may fail and deviate from the desired trajectory. Recently, the execution time certificate problem has attracted significant scholarly interest and remains a vibrant research area, especially within the context of MPC [6]\u2013[18]. A. Related work Current QP algorithms tailored for efficiently solving MPC include first-order, active set, and interior point methods [19]\u2013 [23]. The iteration complexity analysis of first-order methods is provided in [6]\u2013[8] for linear MPC problems, but their iteration complexity result is dependent on the QP problem data such as the Hessian matrix. Their data-dependent iteration complexity result cannot guarantee the time-invariant number of iterations for MPC-based QP with time-varying data such as Real-Time Iteration (RTI)-based nonlinear MPC [24]. Although active set methods often have good performance in small- to medium-scale problems in practice, in theory, they can have an exponential number of iterations in the worst case [25]. Refs. [9]\u2013[13] develop a computationally complicated and expensive (thus offline) worst-case partial enumeration arXiv:2502.07738v1 [eess.SY] 11 Feb 2025"
}