{
  "code_links": [
    "https://github.com/kkulk/hooks"
  ],
  "tasks": [
    "Optimal Routing in the Presence of Hooks"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Convex Optimization",
    "Dynamic Programming"
  ],
  "results": [
    "None"
  ],
  "title": "Optimal Routing in the Presence of Hooks Three Case Studies.pdf",
  "abstract": "We consider the problem of optimally executing a user trade over networks of con- stant function market makers (CFMMs) in the presence of hooks. Hooks, introduced in an upcoming version of Uniswap, are auxiliary smart contracts that allow for extra information to be added to liquidity pools. This allows liquidity providers to enable constraints on trades, allowing CFMMs to read external data, such as volatility infor- mation, and implement additional features, such as onchain limit orders. We consider three important case studies for how to optimally route trades in the presence of hooks: 1) routing through limit orders, 2) optimal liquidations and time-weighted average mar- ket makers (TWAMMs), and 3) noncomposable hooks, which provide additional output in exchange for fill risk. Leveraging tools from convex optimization and dynamic pro- gramming, we propose simple methods for formulating and solving these problems that can be useful for practitioners. 1 Introduction Constant Function Market Makers (CFMMs) are some of the most used onchain application for trading on blockchains. These markets, pioneered by Uniswap, allow for permissionless deployment of liquidity pools that can be used for swapping multiple cryptocurrency assets. Uniswap has facilitated over $2 trillion of trading volume across a number of Ethereum- compatible blockchains such as Ethereum, Arbitrum, and Optimism [Wat24]. The popularity of these markets has persisted throughout multiple market cycles as CFMM designs (such as Uniswap V3 [Ada+21]) have continued to improve. CFMMs coordinate three principal actors: liquidity providers (LPs), arbitrageurs, and users. Liquidity providers have passive capital and aim to earn yield on it by charging \u2217The authors are listed in alphabetical order. 1 arXiv:2502.02059v1 [cs.GT] 4 Feb 2025"
}