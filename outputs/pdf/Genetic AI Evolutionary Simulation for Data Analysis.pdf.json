{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Data Analysis"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Genetic AI",
    "Evolutionary Simulation",
    "Replicator Equations",
    "Evolutionary Strategies"
  ],
  "results": [
    "None"
  ],
  "title": "Genetic AI Evolutionary Simulation for Data Analysis.pdf",
  "abstract": "Wissgott1 1 danube.ai solutions gmbh, 1040 Vienna, Austria We introduce Genetic AI, a novel method for data analysis by evolutionary simulations. The method can be applied to data of any domain and allows for a data-less training of AI models. Without employing predefined rules or training data, Genetic AI first converts the input data into genes and organisms. In a simulation from first principles, these genes and organisms compete for fitness, where their behavior is governed by universal evolutionary strategies. Investigating evolu- tionary stable equilibriums, Genetic AI helps understanding correlations and symmetries in general input data. Several numerical experiments demonstrate the dynamics of exemplary systems. I. INTRODUCTION In the past two decades, the rise of Big Data has proven pivotal for many industries and markets. With this shift to the realms of data comes a huge need for data anal- ysis e.g. for automation, pattern recognition, prediction, consumer needs or decision making. In many of these problems, one finds methods falling into two classes of algorithms: (i) optimization, where one aims to find the optimum in a manifold of solutions [1] or (ii) Machine Learning (ML), where one trains AI models to gain knowledge about a system [2]. On the one hand, in many optimization algorithms, there is a setup phase before the actual optimization. For example, in evolutionary multi-objective optimiza- tion (EMO), one usually converts the data to an evolu- tionary picture where the applied encoding usually de- pends on the problem field [3]. Additionally, depending on the algorithmic variation of EMO, one may select rules which objective dominates another or chooses weights in a weighted cost/fitness function [4]. Fundamentally, in these kind of algorithms, there is a certain form of precon- ditioning, influencing the dynamics of the optimization. While for some systems, predefining multi-objective be- havior may work out well, the same rules may fail to meet quality requirements in other applications. See Fig. 1 for a visualization of the workflow in general optimization. Note that one defining feature in many optimization al- gorithms is the lack of input data, since they generate their own solutions in a feedback loop. On the other hand, algorithms from the field of Ma- chine Learning (ML) depend much less on predefined quantities. In a training phase, they learn the \u2019right\u2019 be- havior for a certain data problem [5]. After an ML model has been trained for a specific application, it can convert input data to an output through inference [6]. While this approach makes ML usually more universal than rule- based algorithms, choosing certain training data may be interpreted as statistically preconditioning the AI model. Consequently, models in ML highly depend on the choice of training data, biasing the result an ML algorithm will deliver. See Fig. 1 for a visualization of the workflow in general ML algorithms. Note that the training phase and the inference phase (converting input data to output) are FIG. 1. Methodological comparison of the workflow in opti- mization algorithms, Machine Learning and Genetic AI. distinct steps that are usually covered by rather different algorithmic strategies. In this paper, we propose a novel approach, apart from optimization and ML: Genetic AI. Our method identifies a result from input data without any rule-based, statis- tical preconditioning or training. In contrast, Genetic AI solves data problems by an ab initio approach: convert- ing the input data into a universal, evolutionary repre- sentation allows to run autonomous simulations without the need of any predefined behavior[7]. See Fig. 1 for a comparison of the algorithmic workflow in Genetic AI. Methodologically, Genetic AI somehow \u2019stands\u2019 in be- tween (evolutionary) optimization and ML: using input data is reminiscent of ML, while employing an (evolution- ary) feedback loop relates to optimization. Additionally, as we will see below, Genetic AI uses replicator equa- tions and \u2019game rounds\u2019 as introduced in evolutionary game theory (EGT, [8, 9]). Through evolutionary dynamics, Genetic AI tests uni- arXiv:2501.19113v1 [cs.NE] 31 Jan 2025"
}