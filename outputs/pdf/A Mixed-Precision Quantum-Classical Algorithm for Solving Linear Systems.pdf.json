{
  "code_links": "None",
  "tasks": [
    "Solving linear systems"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Quantum Singular Value Transformation (QSVT)",
    "Mixed-precision algorithms",
    "Iterative refinement"
  ],
  "results": [
    "Achieves satisfactory accuracy using affordable quantum resources",
    "Reduces the number of calls to the block-encoding of the matrix A\u2020",
    "Improves convergence and reduces the complexity compared to QSVT in higher precision"
  ],
  "title": "A Mixed-Precision Quantum-Classical Algorithm for Solving Linear Systems.pdf",
  "abstract": "\u2014We address the problem of solving a system of linear equations via the Quantum Singular Value Transformation (QSVT). One drawback of the QSVT algorithm is that it requires huge quantum resources if we want to achieve an acceptable accuracy. To reduce the quantum cost, we propose a hybrid quantum-classical algorithm that improves the accuracy and reduces the cost of the QSVT by adding iterative refinement in mixed-precision A first quantum solution is computed using the QSVT, in low precision, and then refined in higher precision until we get a satisfactory accuracy. For this solver, we present an error and complexity analysis, and first experiments using the quantum software stack myQLM. Index Terms\u2014Quantum computing, Linear systems, Quantum Singular Value Transformation, Mixed-precision algorithms, It- erative refinement. I. INTRODUCTION In this paper we address the linear system (LS) problem where, given a nonsingular matrix A \u2208RN\u00d7N and a vector b \u2208RN, we want to compute x \u2208RN such that Ax = b. (1) Solving the LS problem accurately and efficiently is a fun- damental problem in computational science for which there exist many algorithms and software libraries on classical processors [2], [16]. Numerical methods based on factorization or iterative algorithms have reached a high level of maturity on classical computers in particular with the impressive per- formance of 1 Exaflop/s achieved for solving a dense linear system by Gaussian elimination (Linpack benchmark [33]). The perspective of having operational quantum computers in a near future has motivated the development of quantum algorithms for the LS problem, with the promise of either obtaining faster solution or solving problems that are currently intractable with classical supercomputers. With algorithms such as Harrow-Hassidim-Lloyd (HHL) [18], the Quantum Singular Value Transformation (QSVT) [15], or the Variational Quantum Linear Solver (VQLS) [6], quantum algorithms for linear systems offer the potential for exponential speedups under specific conditions. However, these quantum algorithms currently have limita- tions in terms of matrix conditioning and solution accuracy. These can be mitigated by using a combination of both classical computations (running on a Central Processing Unit - CPU) and quantum computations (running on a Quantum Processing Unit - QPU). Recent studies have proposed archi- tectural designs for the integration of quantum devices into High-Performance Computing (HPC) systems, to improve the computation accuracy and to reduce the latency [5], [22]. This type of architectures will be beneficial for implemen- tations that require data transfer between CPU and QPU. At the algorithm level, the techniques that could be targeted to improve linear system solvers could for instance include preconditioning methods or iterative refinement. Iterative refinement has been recently studied for the HHL algorithm [36], [39] or for optimization problems [31]. In this paper we consider the LS problem solved via the QSVT method which offers several advantages: the matrix does not need to be Hermitian and even not square (in this case we solve a least squares problem), the QSVT method can exploit efficient block-encoding techniques and appears to be well suited for Large Scale Quantum (LSQ) architectures. However the quantum circuit for the QSVT requires a polynomial approximation that is very expensive if we want to achieve acceptable accuracy (typically better than 10\u22125 [32]). This has motivated our choice for developing a mixed-precision algorithm which combines the speed and limited precision of the QSVT with iterative refinement in higher precision. Mixed- precision techniques are widely used in HPC algorithms [1]. They have been initially motivated by the emergence of GPU accelerators that provide high performance when computing in lower precision arithmetic, for instance using tensor core units [4]. For hybrid CPU/GPU architectures we can achieve high performance of the solver while preserving the accuracy of the higher precision and we investigate how similar techniques can be applied with the QSVT method. Similarly to the CPU/GPU case, our iterative refinement is also hybrid since it uses a classical processor (to compute the residual and solution update) and a quantum processor (for the QSVT solver). We adapt the iterative refinement to the case where the LS problem is solved via the QSVT and we present an error and complexity analysis to evaluate the quantum ans classical costs of our algorithm. We also show that our approach provides a significant advantage in complexity compared to directly solving the LS problem with QSVT in higher precision. The paper is organized as follows: in Section II, we recall some results on QSVT and classical mixed-precision iterative refinement applied to LS problems. Then in Section III, we arXiv:2502.02212v1 [quant-ph] 4 Feb 2025"
}