{
  "code_links": [
    "https://github.com/IVU-Laboratory/ATHENA"
  ],
  "tasks": [
    "Understanding User Mental Models in AI-Driven Code Completion Tools"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Focus groups",
    "Elicitation study",
    "Scenario-based design",
    "Thematic analysis"
  ],
  "results": [
    "Developed ATHENA, a proof-of-concept CCT",
    "Insights for designing human-centered CCTs"
  ],
  "title": "Understanding User Mental Models in AI-Driven Code Completion Tools Insights from an Elicitation Stu.pdf",
  "abstract": "Integrated Development Environments increasingly implement AI-powered code completion tools (CCTs), which promise to enhance developer efficiency, accuracy, and productivity. However, interaction challenges with CCTs persist, mainly due to mismatches between developers\u2019 mental models and the unpredictable behavior of AI-generated suggestions. This is an aspect underex- plored in the literature. To address this gap, we conducted an elicitation study with 56 devel- opers using focus groups, to elicit their mental models when interacting with CCTs. The study findings provide actionable insights for designing human-centered CCTs that align with user ex- pectations, enhance satisfaction and productivity, and foster trust in AI-powered development tools. To demonstrate the feasibility of these guidelines, we also developed ATHENA, a proof- of-concept CCT that dynamically adapts to developers\u2019 coding preferences and environments, ensuring seamless integration into diverse workflows. Keywords: Code Completion Tools, Generative AI, Mental Models 1. Introduction Integrated Development Environments (IDEs) support developers with valuable tools to write and debug code in current software development practices. In many IDEs, code suggestion by automated systems has become a key element. Employing ever-developing Artificial Intelli- gence (AI) capabilities, these Code Completion Tools (CCTs) intend to boost developer effi- ciency, accuracy, and productivity by cutting down on the manual input needed for repetitive code segments and speeding up the entire coding task. CCTs powered by AI, like GitHub Copilot and JetBrains AI, indicate a movement towards advanced and informed programming assistance. \u2217Corresponding author Email addresses: giuseppe.desolda@uniba.it (Giuseppe Desolda), andrea.esposito@uniba.it (Andrea Esposito), francesco.greco@uniba.it (Francesco Greco), ctucci@unisa.it (Cesare Tucci), paolo.buono@uniba.it (Paolo Buono), antonio.piccinno@uniba.it (Antonio Piccinno) URL: https://orcid.org/0000-0001-9894-2116 (Giuseppe Desolda), https://orcid.org/0000-0002-9536-3087 (Andrea Esposito), https://orcid.org/0000-0003-2730-7697 (Francesco Greco), https://orcid.org/0000-0001-5181-7115 (Cesare Tucci), https://orcid.org/0000-0002-1421-3686 (Paolo Buono), https://orcid.org/0000-0003-1561-70736 (Antonio Piccinno) Preprint submitted to Anonimyzed journal February 5, 2025 arXiv:2502.02194v1 [cs.HC] 4 Feb 2025"
}