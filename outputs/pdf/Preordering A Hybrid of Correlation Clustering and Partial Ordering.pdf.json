{
  "code_links": [
    "https://github.com/JannikIrmai/preordering-problem"
  ],
  "tasks": [
    "Preordering"
  ],
  "datasets": [
    "Twitter ego networks",
    "Google+ ego networks",
    "117th US Congress Twitter interaction network"
  ],
  "methods": [
    "Greedy max-dicut approximation",
    "Greedy arc insertion",
    "Linear programming"
  ],
  "results": [
    "4-approximation algorithm",
    "Local search technique",
    "Non-canonical facets of the associated preorder polytope",
    "Non-trivial upper bounds on the objective value"
  ],
  "title": "Preordering A Hybrid of Correlation Clustering and Partial Ordering.pdf",
  "abstract": "We discuss the preordering problem, a joint relaxation of the correlation clustering problem and the partial ordering problem. We show that preordering remains NP-hard even for values in {\u22121, 0, 1}. We introduce a linear-time 4-approximation algorithm and a local search technique. For an integer linear program formulation, we establish a class of non-canonical facets of the associated preorder polytope. By solving a non-canonical linear program relaxation, we obtain non-trivial upper bounds on the objective value. We provide implementations2 of the algorithms we de\ufb01ne, apply these to published social networks and compare the output and e\ufb03ciency qualitatively and quantitatively. 1 Introduction In this article we introduce algorithms for jointly clustering and partially ordering data. Motivation stems from the problem of estimating a binary relation on the accounts of a social network where the notions that one account follows, likes or reacts to another account need neither be symmetric nor asymmetric. In particular, i following j does not need to imply that j follows i, nor does it necessarily imply that j does not follow i. Clustering alone does not capture asymmetric subsets of the relation on the social network because the equivalence relation that characterizes the clustering is symmetric. Similarly, partial ordering alone does not capture symmetric subsets of the relation on the social network because partial orders are antisymmetric. Like in clustering and partial ordering, we work with the assumption that the relation on the social network is transitive, i.e., if i follows j and j follows k then i follows k. This assumption sim- pli\ufb01es reality and we quantify the deviation empirically. Unlike in clustering and partial ordering, we do not assume symmetry or antisymmetry. To model our assumption we introduce algorithms that output a preorder on a set, i.e., a binary relation on the set that is re\ufb02exive and transitive. More speci\ufb01cally, we introduce algorithms for the preordering problem: De\ufb01nition 1. (Wakabayashi, 1998) Given a \ufb01nite set V and a value cij \u2208R for every pair ij of distinct i, j \u2208V , the (maximum value) preordering problem consists in \ufb01nding a preorder \u2272on V so as to maximize the sum of the values cij of those pairs ij \u2208V 2 with i \u0338= j for which i \u2272j. Every preorder de\ufb01nes, and is characterized by, a clustering and a partial order: A clustering is de\ufb01ned by the symmetric subset of the preorder (an equivalence relation); a strict partial order on the set of clusters is well-de\ufb01ned by the asymmetric subset of the preorder. An example is depicted in Figure 1. In this article we make the following contributions. Firstly, we show that preordering remains NP-hard even for values in {\u22121, 0, 1}. Secondly, we introduce a linear-time 4-approximation algorithm and a local search technique for the preordering problem. Thirdly, we consider an integer linear program (ILP) formulation of the preordering problem, establish a class of non-canonical facets of the associated preordering polytope and de\ufb01ne a separation algorithm for solving a non- canonical linear program (LP) relaxation; this yields non-trivial upper bounds on the objective value. Fourthly, we implement the algorithms in the form of open-source code, apply these to real social networks from Fink et al. (2023) and Leskovec and Mcauley (2012) with up to 107 edges and compare the output and e\ufb03ciency qualitatively and quantitatively. 1Correspondence: bjoern.andres@tu-dresden.de 2Source code available at: https://github.com/JannikIrmai/preordering-problem 1"
}