{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Sparse tensor algebra",
    "Reconfigurable and fixed-function spatial dataflow accelerators"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Sparse Abstract Machine (SAM)",
    "Custard compiler"
  ],
  "results": [
    "Generality and extensibility evaluation",
    "Performance space exploration for sparse tensor algebra optimizations",
    "Dataflow hardware representation"
  ],
  "paper_id": "6310233d90e50fcafdc2f604",
  "title": "The Sparse Abstract Machine",
  "abstract": "  We propose the Sparse Abstract Machine (SAM), an abstract machine model for targeting sparse tensor algebra to reconfigurable and fixed-function spatial dataflow accelerators. SAM defines a streaming dataflow abstraction with sparse primitives that encompass a large space of scheduled tensor algebra expressions. SAM dataflow graphs naturally separate tensor formats from algorithms and are expressive enough to incorporate arbitrary iteration orderings and many hardware-specific optimizations. We also present Custard, a compiler from a high-level language to SAM that demonstrates SAM's usefulness as an intermediate representation. We automatically bind from SAM to a streaming dataflow simulator. We evaluate the generality and extensibility of SAM, explore the performance space of sparse tensor algebra optimizations using SAM, and show SAM's ability to represent dataflow hardware. "
}