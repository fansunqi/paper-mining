{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Probabilistic Program Verification"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Inductive Synthesis of Inductive Invariants"
  ],
  "results": [
    "Outperforms state-of-the-art probabilistic model checkers",
    "Competitive with modern tools for invariant synthesis and expected runtime reasoning"
  ],
  "paper_id": "627dbeda5aee126c0ff67b9b",
  "title": "Probabilistic Program Verification via Inductive Synthesis of Inductive\n  Invariants",
  "abstract": "  Essential tasks for the verification of probabilistic programs include bounding expected outcomes and proving termination in finite expected runtime. We contribute a simple yet effective inductive synthesis approach for proving such quantitative reachability properties by generating inductive invariants on source-code level. Our implementation shows promise: It finds invariants for (in)finite-state programs, can beat state-of-the-art probabilistic model checkers, and is competitive with modern tools dedicated to invariant synthesis and expected runtime reasoning. "
}