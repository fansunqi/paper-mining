{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Formal software verification",
    "Deployed software systems",
    "Correctness of software"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Formal verification techniques and tools"
  ],
  "results": [
    "None"
  ],
  "paper_id": "64225b5f90e50fcafde0a6d1",
  "title": "Lessons from Formally Verified Deployed Software Systems (Extended\n  version)",
  "abstract": "  The technology of formal software verification has made spectacular advances, but how much does it actually benefit the development of practical software? Considerable disagreement remains about the practicality of building systems with mechanically-checked proofs of correctness. Is this prospect confined to a few expensive, life-critical projects, or can the idea be applied to a wide segment of the software industry?   To help answer this question, the present survey examines a range of projects, in various application areas, that have produced formally verified systems and deployed them for actual use. It considers the technologies used, the form of verification applied, the results obtained, and the lessons that can be drawn for the software industry at large and its ability to benefit from formal verification techniques and tools.   Note: a short version of this paper is also available, covering in detail only a subset of the considered systems. The present version is intended for full reference. "
}