{
  "code_links": [
    "https://github.com/iVMCL/PaCaViT"
  ],
  "tasks": [
    "Image classification",
    "Object detection",
    "Instance segmentation",
    "Semantic segmentation"
  ],
  "datasets": [
    "ImageNet-1k",
    "MS-COCO",
    "MIT-ADE20k"
  ],
  "methods": [
    "Patch-to-Cluster attention (PaCa)",
    "Vision Transformers (ViT)"
  ],
  "results": [
    "Better performance than SWin and PVTs in ImageNet-1k and MIT-ADE20k",
    "More efficient than PVT models in MS-COCO and MIT-ADE20k due to linear complexity",
    "Learned clusters are semantically meaningful"
  ],
  "paper_id": "623be1965aee126c0f37aa0d",
  "title": "PaCa-ViT: Learning Patch-to-Cluster Attention in Vision Transformers",
  "abstract": "  Vision Transformers (ViTs) are built on the assumption of treating image patches as ``visual tokens\" and learn patch-to-patch attention. The patch embedding based tokenizer has a semantic gap with respect to its counterpart, the textual tokenizer. The patch-to-patch attention suffers from the quadratic complexity issue, and also makes it non-trivial to explain learned ViTs. To address these issues in ViT, this paper proposes to learn Patch-to-Cluster attention (PaCa) in ViT. Queries in our PaCa-ViT starts with patches, while keys and values are directly based on clustering (with a predefined small number of clusters). The clusters are learned end-to-end, leading to better tokenizers and inducing joint clustering-for-attention and attention-for-clustering for better and interpretable models. The quadratic complexity is relaxed to linear complexity. The proposed PaCa module is used in designing efficient and interpretable ViT backbones and semantic segmentation head networks. In experiments, the proposed methods are tested on ImageNet-1k image classification, MS-COCO object detection and instance segmentation and MIT-ADE20k semantic segmentation. Compared with the prior art, it obtains better performance in all the three benchmarks than the SWin and the PVTs by significant margins in ImageNet-1k and MIT-ADE20k. It is also significantly more efficient than PVT models in MS-COCO and MIT-ADE20k due to the linear complexity. The learned clusters are semantically meaningful. Code and model checkpoints are available at https://github.com/iVMCL/PaCaViT. "
}