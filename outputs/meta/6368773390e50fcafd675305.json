{
  "code_links": [
    "https://github.com/GeometricBCI/Tensor-CSPNet-and-Graph-CSPNet"
  ],
  "tasks": [
    "Motor Imagery Classification"
  ],
  "datasets": [
    "MI-EEG datasets"
  ],
  "methods": [
    "Graph Neural Networks on SPD Manifolds",
    "Tensor-CSPNet",
    "Graph-CSPNet"
  ],
  "results": [
    "Near-optimal classification accuracies",
    "Winning nine out of eleven subject-specific scenarios"
  ],
  "paper_id": "6368773390e50fcafd675305",
  "title": "Graph Neural Networks on SPD Manifolds for Motor Imagery Classification:\n  A Perspective from the Time-Frequency Analysis",
  "abstract": "  The classification of motor imagery (MI) is a highly sought-after research topic in the field of Electroencephalography (EEG)-based brain-computer interfaces (BCIs), with immense commercial value. Over the past two decades, there has been a fundamental shift in the trend of MI-EEG classifiers, resulting in a gradual increase in their performance. The emergence of Tensor-CSPNet, the first geometric deep learning (GDL) framework in BCI research, is attributed to the imperative of characterizing the non-Euclidean nature of signals. Fundamentally, Tensor-CSPNet is a deep learning-based classifier that capitalizes on the second-order statistics of EEGs. In contrast to the conventional approach of utilizing first-order statistics for EEG signals, the utilization of these second-order statistics represents the classical treatment. These statistics provide adequate discriminative information, rendering them suitable for MI-EEG classification. In this study, we introduce another GDL classifier, called Graph-CSPNet, for MI-EEG classification. Graph-CSPNet utilizes graph-based techniques to characterize EEG signals in both the time and frequency domains, realizing the fundamental perspective of time-frequency analysis. The architecture of Graph-CSPNet is further simplified, offering greater flexibility to cope with variable time-frequency resolution for signal segmentation and capturing localized fluctuations. In contrast to Tensor-CSPNet, this approach enables Graph-CSPNet to achieve better results in MI-EEG classification. To evaluate the efficacy of Graph-CSPNet, we utilize five commonly-used publicly available MI-EEG datasets, and it produces near-optimal classification accuracies, winning nine out of eleven subject-specific scenarios. The Python implementation of Graph-CSPNet is available on a GitHub repository https://github.com/GeometricBCI/Tensor-CSPNet-and-Graph-CSPNet. "
}