{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Fault management in MPI",
    "Fault-aware non-collective communication"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Fault resiliency framework integration",
    "ULFM-based applications"
  ],
  "results": [
    "Scalable solution with limited overhead",
    "Non-collective reparation viable for ULFM-based applications"
  ],
  "paper_id": "63180bf390e50fcafded6f6d",
  "title": "Fault-Aware Non-Collective Communication Creation and Reparation in MPI",
  "abstract": "  The increasing size of HPC architectures makes the faults' presence a more and more frequent eventuality. This issue becomes especially relevant since MPI, the de-facto standard for inter-process communication, lacks proper fault management functionalities. Past efforts produced extensions to the MPI standard that enabled fault management, including ULFM. While providing powerful tools to handle faults, it still faces limitations like the collectiveness of the repair procedure. With this paper, we overcome those limitations and achieve fault-aware non-collective communicator creation and reparation. We integrate our solution into an existing fault resiliency framework and measure the overhead introduced in the application code. The experimental campaign shows that our solution is scalable and introduces a limited overhead, and the non-collective reparation is a viable opportunity for ULFM-based applications. "
}