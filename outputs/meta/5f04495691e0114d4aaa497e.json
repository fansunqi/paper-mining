{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Modelling, Verification and Transformation of Concurrent Imperative Programs"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Framework embedded in simply typed higher-order logic"
  ],
  "results": [
    "Illustration of applicability with Peterson's mutual exclusion algorithm"
  ],
  "paper_id": "5f04495691e0114d4aaa497e",
  "title": "A Framework for Modelling, Verification and Transformation of Concurrent\n  Imperative Programs",
  "abstract": "  The paper gives a detailed presentation of a framework, embedded into the simply typed higher-order logic and aimed at the support of sound and structured reasoning about various properties of models of imperative programs with interleaved computations. As a case study, a model of the Peterson's mutual exclusion algorithm will be scrutinised in the course of the paper illustrating applicability of the framework. "
}