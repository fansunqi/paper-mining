{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Scalar Linear Function Retrieval from Blind Servers"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Secret sharing, key superposition, Placement Delivery Array (PDA)"
  ],
  "results": [
    "Achievable memory-storage-communication region, optimal storage size and communication load within a constant multiplicative gap"
  ],
  "paper_id": "63cdfab690e50fcafd10707f",
  "title": "Robust, Private and Secure Cache-Aided Scalar Linear Function Retrieval\n  from Blind Servers",
  "abstract": "  This work investigates a system composed of multiple distributed servers and users, where each user is equiped with a local cache, and aims to retrieve a scalar linear function of the files of a library from the servers. The files are stored at the servers such that any $I$ colluding servers can not obtain any information about the files, while any $I+L$ servers can together recover all files. In addition, the system are designed to satisfy: (a) Each user's demand must be satisfied upon receiving the signals from any $I+L$ servers; (b) The content of the library must be kept secure from a wiretapper who obtains all the signals from the servers; (c) Any subset of users together with all the servers can not obtain any information about the demands of the remaining users. A coded scheme is derived to satisfy the above constraints by incoporating the idea of secret sharing and key superposition into the framework of Placement Delivery Array (PDA), originally proposed to characterize the single-server coded caching system without any security or privacy constraints, where the memory size at each user, the storage size at each server and the total communication load over all servers are characterized by the PDA parameters. It is shown that the PDAs describing the original Maddah-Ali and Niesen's coded caching scheme result in an achievable memory-storage-communication region, such that the storage size and the communication load are optimal to within a constant multiplicative gap, except for the small memory regime when the number of files is smaller than the number of users. "
}