{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Relational verification",
    "Proof of relations between programs",
    "Alignment completeness"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Relational Hoare logics (RHL)",
    "Product automata",
    "Alignment automata",
    "Kleene algebra with tests"
  ],
  "results": [
    "Solving the open problem of general alignment completeness",
    "Bridging between syntax-based reasoning and automata representations"
  ],
  "paper_id": "63a2794d90e50fcafd2944f5",
  "title": "Making Relational Hoare Logic Alignment Complete",
  "abstract": "  In relational verification, judicious alignment of computational steps facilitates proof of relations between programs using simple relational assertions. Relational Hoare logics (RHL) provide compositional rules that embody various alignments. Seemingly more flexible alignments can be expressed in terms of product automata based on program transition relations. A RHL can be complete, in the ordinary sense, using a single degenerate alignment rule. The notion of alignment completeness was previously proposed as a more satisfactory measure, based on alignment automata, and some rules were shown to be alignment complete with respect to a few ad hoc forms of alignment automata. Using a rule of semantics-preserving rewrites based on Kleene algebra with tests, an RHL is shown to be alignment complete with respect to a very general class of alignment automata. Besides solving the open problem of general alignment completeness, this result bridges between human-friendly syntax-based reasoning and automata representations that facilitate automated verification. "
}