{
  "code_links": [
    "https://github.com/"
  ],
  "tasks": [
    "Reinforcement Learning",
    "State Representation",
    "Go-Explore Paradigm"
  ],
  "datasets": [
    "MontezumaRevenge",
    "Gravitar",
    "Frostbite (Atari)"
  ],
  "methods": [
    "Time-Myopic State Representation"
  ],
  "results": [
    "Improved solution for detachment problem",
    "Effective alternative for domain-engineered heuristic",
    "More general approach"
  ],
  "paper_id": "63c4c02990e50fcafdae0131",
  "title": "Time-Myopic Go-Explore: Learning A State Representation for the\n  Go-Explore Paradigm",
  "abstract": "  Very large state spaces with a sparse reward signal are difficult to explore. The lack of a sophisticated guidance results in a poor performance for numerous reinforcement learning algorithms. In these cases, the commonly used random exploration is often not helpful. The literature shows that this kind of environments require enormous efforts to systematically explore large chunks of the state space. Learned state representations can help here to improve the search by providing semantic context and build a structure on top of the raw observations. In this work we introduce a novel time-myopic state representation that clusters temporal close states together while providing a time prediction capability between them. By adapting this model to the Go-Explore paradigm (Ecoffet et al., 2021b), we demonstrate the first learned state representation that reliably estimates novelty instead of using the hand-crafted representation heuristic. Our method shows an improved solution for the detachment problem which still remains an issue at the Go-Explore Exploration Phase. We provide evidence that our proposed method covers the entire state space with respect to all possible time trajectories without causing disadvantageous conflict-overlaps in the cell archive. Analogous to native Go-Explore, our approach is evaluated on the hard exploration environments MontezumaRevenge, Gravitar and Frostbite (Atari) in order to validate its capabilities on difficult tasks. Our experiments show that time-myopic Go-Explore is an effective alternative for the domain-engineered heuristic while also being more general. The source code of the method is available on GitHub. "
}