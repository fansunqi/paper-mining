{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Community detection"
  ],
  "datasets": [
    "Synthetic benchmarks",
    "Real networks"
  ],
  "methods": [
    "Branch-and-cut scheme",
    "Integer programming formulation"
  ],
  "results": [
    "Bayan outperforms 21 other algorithms",
    "Several times faster than existing solvers",
    "Suitable for networks with up to 3000 edges",
    "Can approximate maximum modularity in larger networks"
  ],
  "paper_id": "631ff4ec90e50fcafd85987d",
  "title": "The Bayan Algorithm: Detecting Communities in Networks Through Exact and\n  Approximate Optimization of Modularity",
  "abstract": "  Community detection is a classic problem in network science with extensive applications in various fields. Among numerous approaches, the most common method is modularity maximization. Despite their design philosophy and wide adoption, heuristic modularity maximization algorithms rarely return an optimal partition or anything similar. We propose a specialized algorithm, Bayan, which returns partitions with a guarantee of either optimality or proximity to an optimal partition. At the core of the Bayan algorithm is a branch-and-cut scheme that solves an integer programming formulation of the problem to optimality or approximate it within a factor. We demonstrate Bayan's distinctive accuracy and stability over 21 other algorithms in retrieving ground-truth communities in synthetic benchmarks and node labels in real networks. Bayan is several times faster than open-source and commercial solvers for modularity maximization making it capable of finding optimal partitions for instances that cannot be optimized by any other existing method. Overall, our assessments point to Bayan as a suitable choice for exact maximization of modularity in networks with up to 3000 edges (in their largest connected component) and approximating maximum modularity in larger networks on ordinary computers. "
}