{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Subgraph reconfiguration problems in directed graphs",
    "Reconfiguring arborescences"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Polynomial-time algorithm for reconfiguring arborescences",
    "PSPACE-completeness analysis for directed paths and directed acyclic graphs"
  ],
  "results": [
    "Problem solvable in polynomial time",
    "PSPACE-complete for directed paths or directed acyclic graphs",
    "Polynomial-time algorithm for shortest reconfiguration sequence between spanning arborescences"
  ],
  "paper_id": "60e7acda91e011dcbc23af86",
  "title": "Reconfiguring (non-spanning) arborescences",
  "abstract": "  In this paper, we investigate the computational complexity of subgraph reconfiguration problems in directed graphs. More specifically, we focus on the problem of reconfiguring arborescences in a digraph, where an arborescence is a directed graph such that its underlying undirected graph forms a tree and all vertices have in-degree at most 1. Given two arborescences in a digraph, the goal of the problem is to determine whether there is a (reconfiguration) sequence of arborescences between the given arborescences such that each arborescence in the sequence can be obtained from the previous one by removing an arc and then adding another arc. We show that this problem can be solved in polynomial time, whereas the problem is PSPACE-complete when we restrict arborescences in a reconfiguration sequence to directed paths or relax to directed acyclic graphs. We also show that there is a polynomial-time algorithm for finding a shortest reconfiguration sequence between two spanning arborescences. "
}