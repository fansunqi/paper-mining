{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Fairness in Recommendation",
    "Cold-Start Recommendation"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Transferable Counterfactual Fairness Framework"
  ],
  "results": [
    "Improves fairness for target users",
    "Outperforms comparative models in recommendation performance"
  ],
  "paper_id": "63d340e990e50fcafd910cd9",
  "title": "Transferable Fairness for Cold-Start Recommendation",
  "abstract": "  With the increasing use and impact of recommender systems in our daily lives, how to achieve fairness in recommendation has become an important problem. Previous works on fairness-aware recommendation mainly focus on a predefined set of (usually warm-start) users. However, recommender systems often face more challenging fairness issues for new users or cold-start users due to their insufficient amount of interactions. Therefore, it is essential to study whether the trained model still performs fairly for a new set of cold-start users. This paper considers the scenario where the recommender system meets new users who only have limited or even no interaction with the platform, and aims at providing high-quality and fair recommendations to such users effectively. The sufficient interaction data from warm users is treated as the source user domain, while the data from new users is treated as the target user domain, and we consider to transfer the counterfactual fairness from the source users to the target users. To this end, we introduce a framework to achieve transferable counterfactual fairness in recommendation. The proposed method is able to transfer the knowledge of a fair model learned from the source users to the target users with the hope of improving the recommendation performance and keeping the fairness property on the target users. Experiments on two real-world datasets with representative recommendation algorithms show that our method not only promotes fairness for the target users, but also outperforms comparative models in terms of recommendation performance. "
}