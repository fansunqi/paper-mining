{
  "code_links": [
    "https://github.com/hongmingli1995/CR-VAE"
  ],
  "tasks": [
    "Medical Time Series Generation"
  ],
  "datasets": [
    "Synthetic data",
    "Human brain EEG signals",
    "fMRI data"
  ],
  "methods": [
    "Causal Recurrent Variational Autoencoder (CR-VAE)",
    "Multi-head decoder",
    "Sparse adjacency matrix",
    "Granger causality"
  ],
  "results": [
    "Outperforms state-of-the-art time series generative models",
    "Discovers a faithful causal graph"
  ],
  "paper_id": "63c8b59490e50fcafd90b565",
  "title": "Causal Recurrent Variational Autoencoder for Medical Time Series\n  Generation",
  "abstract": "  We propose causal recurrent variational autoencoder (CR-VAE), a novel generative model that is able to learn a Granger causal graph from a multivariate time series x and incorporates the underlying causal mechanism into its data generation process. Distinct to the classical recurrent VAEs, our CR-VAE uses a multi-head decoder, in which the $p$-th head is responsible for generating the $p$-th dimension of $\\mathbf{x}$ (i.e., $\\mathbf{x}^p$). By imposing a sparsity-inducing penalty on the weights (of the decoder) and encouraging specific sets of weights to be zero, our CR-VAE learns a sparse adjacency matrix that encodes causal relations between all pairs of variables. Thanks to this causal matrix, our decoder strictly obeys the underlying principles of Granger causality, thereby making the data generating process transparent. We develop a two-stage approach to train the overall objective. Empirically, we evaluate the behavior of our model in synthetic data and two real-world human brain datasets involving, respectively, the electroencephalography (EEG) signals and the functional magnetic resonance imaging (fMRI) data. Our model consistently outperforms state-of-the-art time series generative models both qualitatively and quantitatively. Moreover, it also discovers a faithful causal graph with similar or improved accuracy over existing Granger causality-based causal inference methods. Code of CR-VAE is publicly available at https://github.com/hongmingli1995/CR-VAE. "
}