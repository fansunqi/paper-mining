{
  "code_links": [
    "None"
  ],
  "tasks": [
    "AIGC service in wireless edge networks"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Deep reinforcement learning for ASP selection",
    "Image-based perceived quality evaluation metrics"
  ],
  "results": [
    "Higher quality of generated content",
    "Fewer crashed tasks compared to benchmarks"
  ],
  "paper_id": "63bcd73690e50fcafdefa1f8",
  "title": "Enabling AI-Generated Content (AIGC) Services in Wireless Edge Networks",
  "abstract": "  Artificial Intelligence-Generated Content (AIGC) refers to the use of AI to automate the information creation process while fulfilling the personalized requirements of users. However, due to the instability of AIGC models, e.g., the stochastic nature of diffusion models, the quality and accuracy of the generated content can vary significantly. In wireless edge networks, the transmission of incorrectly generated content may unnecessarily consume network resources. Thus, a dynamic AIGC service provider (ASP) selection scheme is required to enable users to connect to the most suited ASP, improving the users' satisfaction and quality of generated content. In this article, we first review the AIGC techniques and their applications in wireless networks. We then present the AIGC-as-a-service (AaaS) concept and discuss the challenges in deploying AaaS at the edge networks. Yet, it is essential to have performance metrics to evaluate the accuracy of AIGC services. Thus, we introduce several image-based perceived quality evaluation metrics. Then, we propose a general and effective model to illustrate the relationship between computational resources and user-perceived quality evaluation metrics. To achieve efficient AaaS and maximize the quality of generated content in wireless edge networks, we propose a deep reinforcement learning-enabled algorithm for optimal ASP selection. Simulation results show that the proposed algorithm can provide a higher quality of generated content to users and achieve fewer crashed tasks by comparing with four benchmarks, i.e., overloading-avoidance, random, round-robin policies, and the upper-bound schemes. "
}