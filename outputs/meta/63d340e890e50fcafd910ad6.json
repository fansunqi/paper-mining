{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Minimizing the Motion-to-Photon-delay in Virtual Reality Systems"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "PredATW: an ML-based predictor for ATW latency"
  ],
  "results": [
    "Predictor achieves an error of 0.77 ms",
    "Reduces deadline misses by 73.1%"
  ],
  "paper_id": "63d340e890e50fcafd910ad6",
  "title": "Minimizing the Motion-to-Photon-delay (MPD) in Virtual Reality Systems",
  "abstract": "  With the advent of low-power ultra-fast hardware and GPUs, virtual reality (VR) has gained a lot of prominence in the last few years and is being used in various areas such as education, entertainment, scientific visualization, and computer-aided design. VR-based applications are highly interactive, and one of the most important performance metrics for these applications is the motion-to-photon-delay (MPD). MPD is the delay from the users head movement to the time at which the image gets updated on the VR screen. Since the human visual system can even detect an error of a few pixels (very spatially sensitive), the MPD should be as small as possible. Popular VR vendors use the GPU-accelerated Asynchronous Time Warp (ATW) algorithm to reduce the MPD. ATW reduces the MPD if and only if the warping operation finishes just before the display refreshes. However, due to the competition between applications for the shared GPU, the GPU-accelerated ATW algorithm suffers from an unpredictable ATW latency, making it challenging to find the ideal time instance for starting the time warp and ensuring that it completes with the least amount of lag relative to the screen refresh. Hence, the state-of-the-art is to use a separate hardware unit for the time warping operation. Our approach, PredATW, uses an ML-based predictor to predict the ATW latency for a VR application, and then schedule it as late as possible. This is the first work to do so. Our predictor achieves an error of 0.77 ms across several popular VR applications for predicting the ATW latency. As compared to the baseline architecture, we reduce deadline misses by 73.1%. "
}