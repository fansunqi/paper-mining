{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Monadic First- and Second-Order Logic on Strings"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Monadic First-Order logic",
    "Monadic Second-Order logic"
  ],
  "results": [
    "Monadic First-Order logic is strictly less expressive than Finite-State Automata",
    "Monadic Second-Order logic captures Regular Languages exactly"
  ],
  "paper_id": "63d340e890e50fcafd910bc4",
  "title": "Lecture Notes on Monadic First- and Second-Order Logic on Strings",
  "abstract": "  These notes present the essentials of first- and second-order monadic logics on strings with introductory purposes. We discuss Monadic First-Order logic and show that it is strictly less expressive than Finite-State Automata, in that it only captures a strict subset of Regular Languages -- the non-counting ones. We then introduce Monadic Second-Order logic; such a logic is, syntactically, a superset of Monadic First-Order logic and captures Regular Languages exactly. We also show how to transform an automaton into a corresponding formula and vice versa. Finally, we discuss the use of logical characterizations of classes of languages as the basis for automatic verification techniques. "
}