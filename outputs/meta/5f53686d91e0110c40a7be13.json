{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Continual Learning",
    "Active Learning",
    "Open Set Recognition"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Consolidated view bridging continual learning, active learning, and open set recognition"
  ],
  "results": [
    "Joint improvement in alleviating catastrophic forgetting, querying data, selecting task orders, robust open world application"
  ],
  "paper_id": "5f53686d91e0110c40a7be13",
  "title": "A Wholistic View of Continual Learning with Deep Neural Networks:\n  Forgotten Lessons and the Bridge to Active and Open World Learning",
  "abstract": "  Current deep learning methods are regarded as favorable if they empirically perform well on dedicated test sets. This mentality is seamlessly reflected in the resurfacing area of continual learning, where consecutively arriving data is investigated. The core challenge is framed as protecting previously acquired representations from being catastrophically forgotten. However, comparison of individual methods is nevertheless performed in isolation from the real world by monitoring accumulated benchmark test set performance. The closed world assumption remains predominant, i.e. models are evaluated on data that is guaranteed to originate from the same distribution as used for training. This poses a massive challenge as neural networks are well known to provide overconfident false predictions on unknown and corrupted instances. In this work we critically survey the literature and argue that notable lessons from open set recognition, identifying unknown examples outside of the observed set, and the adjacent field of active learning, querying data to maximize the expected performance gain, are frequently overlooked in the deep learning era. Hence, we propose a consolidated view to bridge continual learning, active learning and open set recognition in deep neural networks. Finally, the established synergies are supported empirically, showing joint improvement in alleviating catastrophic forgetting, querying data, selecting task orders, while exhibiting robust open world application. "
}