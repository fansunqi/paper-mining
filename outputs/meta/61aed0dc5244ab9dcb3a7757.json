{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Visualization prototyping in D3"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Resilient support features for D3 visualizations",
    "Recommendations for complementary interactions",
    "Code augmentation for implementing interactions"
  ],
  "results": [
    "Significantly fewer programming iterations for prototyping",
    "Characterization of key modification strategies for customizing D3 templates"
  ],
  "paper_id": "61aed0dc5244ab9dcb3a7757",
  "title": "User-Driven Support for Visualization Prototyping in D3",
  "abstract": "  Templates have emerged as an effective approach to simplifying the visualization design and programming process. For example, they enable users to quickly generate multiple visualization designs even when using complex toolkits like D3. However, these templates are often treated as rigid artifacts that respond poorly to changes made outside of the template's established parameters, limiting user creativity. Preserving the user's creative flow requires a more dynamic approach to template-based visualization design, where tools can respond gracefully to users' edits when they modify templates in unexpected ways. In this paper, we leverage the structural similarities revealed by templates to design resilient support features for prototyping D3 visualizations: recommendations to suggest complementary interactions for a user's D3 program; and code augmentation to implement recommended interactions with a single click, even when users deviate from pre-defined templates. We demonstrate the utility of these features in Mirny, a d design-focused prototyping environment for D3. In a user study with 20 D3 users, we find that these automated features enable participants to prototype their design ideas with significantly fewer programming iterations. We also characterize key modification strategies used by participants to customize D3 templates. Informed by our findings and participants' feedback, we discuss the key implications of the use of templates for interleaving visualization programming and design. "
}