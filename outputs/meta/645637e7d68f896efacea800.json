{
  "code_links": [
    "None"
  ],
  "tasks": [
    "High-throughput materials simulations"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Python package for HTS",
    "server-client pattern",
    "message brokers",
    "complex workflows",
    "combinatorial chemical spaces"
  ],
  "results": [
    "None"
  ],
  "paper_id": "645637e7d68f896efacea800",
  "title": "mkite: A distributed computing platform for high-throughput materials\n  simulations",
  "abstract": "  Advances in high-throughput simulation (HTS) software enabled computational databases and big data to become common resources in materials science. However, while computational power is increasingly larger, software packages orchestrating complex workflows in heterogeneous environments are scarce. This paper introduces mkite, a Python package for performing HTS in distributed computing environments. The mkite toolkit is built with the server-client pattern, decoupling production databases from client runners. When used in combination with message brokers, mkite enables any available client to perform calculations without prior hardware specification on the server side. Furthermore, the software enables the creation of complex workflows with multiple inputs and branches, facilitating the exploration of combinatorial chemical spaces. Software design principles are discussed in detail, highlighting the usefulness of decoupling simulations and data management tasks to diversify simulation environments. To exemplify how mkite handles simulation workflows of combinatorial systems, case studies on zeolite synthesis and surface catalyst discovery are provided. Finally, key differences with other atomistic simulation workflows are outlined. The mkite suite can enable HTS in distributed computing environments, simplifying workflows with heterogeneous hardware and software, and helping deployment of calculations at scale. "
}