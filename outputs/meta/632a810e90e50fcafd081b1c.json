{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Video frame interpolation"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Event-based video frame interpolation with attention (E-VFIA)",
    "Deformable convolutions",
    "Multi-head self-attention"
  ],
  "results": [
    "Outperforms current state-of-the-art methods",
    "Significantly smaller model size"
  ],
  "paper_id": "632a810e90e50fcafd081b1c",
  "title": "E-VFIA : Event-Based Video Frame Interpolation with Attention",
  "abstract": "  Video frame interpolation (VFI) is a fundamental vision task that aims to synthesize several frames between two consecutive original video images. Most algorithms aim to accomplish VFI by using only keyframes, which is an ill-posed problem since the keyframes usually do not yield any accurate precision about the trajectories of the objects in the scene. On the other hand, event-based cameras provide more precise information between the keyframes of a video. Some recent state-of-the-art event-based methods approach this problem by utilizing event data for better optical flow estimation to interpolate for video frame by warping. Nonetheless, those methods heavily suffer from the ghosting effect. On the other hand, some of kernel-based VFI methods that only use frames as input, have shown that deformable convolutions, when backed up with transformers, can be a reliable way of dealing with long-range dependencies. We propose event-based video frame interpolation with attention (E-VFIA), as a lightweight kernel-based method. E-VFIA fuses event information with standard video frames by deformable convolutions to generate high quality interpolated frames. The proposed method represents events with high temporal resolution and uses a multi-head self-attention mechanism to better encode event-based information, while being less vulnerable to blurring and ghosting artifacts; thus, generating crispier frames. The simulation results show that the proposed technique outperforms current state-of-the-art methods (both frame and event-based) with a significantly smaller model size. "
}