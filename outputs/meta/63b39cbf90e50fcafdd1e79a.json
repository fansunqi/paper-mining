{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Multi-version Models Management",
    "Model-driven Software Engineering"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Triple Graph Grammars",
    "Multi-version Models"
  ],
  "results": [
    "Improved execution time performance"
  ],
  "paper_id": "63b39cbf90e50fcafdd1e79a",
  "title": "Triple Graph Grammars for Multi-version Models",
  "abstract": "  Like conventional software projects, projects in model-driven software engineering require adequate management of multiple versions of development artifacts, importantly allowing living with temporary inconsistencies. In the case of model-driven software engineering, employed versioning approaches also have to handle situations where different artifacts, that is, different models, are linked via automatic model transformations.   In this report, we propose a technique for jointly handling the transformation of multiple versions of a source model into corresponding versions of a target model, which enables the use of a more compact representation that may afford improved execution time of both the transformation and further analysis operations. Our approach is based on the well-known formalism of triple graph grammars and a previously introduced encoding of model version histories called multi-version models. In addition to showing the correctness of our approach with respect to the standard semantics of triple graph grammars, we conduct an empirical evaluation that demonstrates the potential benefit regarding execution time performance. "
}