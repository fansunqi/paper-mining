{
  "code_links": [
    "https://github.com/Eaphan/GLENet"
  ],
  "tasks": [
    "3D Object Detection"
  ],
  "datasets": [
    "KITTI",
    "Waymo"
  ],
  "methods": [
    "Generative Label Uncertainty Estimation",
    "Conditional Variational Autoencoders"
  ],
  "results": [
    "Significant and consistent performance gains",
    "GLENet-VR outperforms all published LiDAR-based approaches",
    "1st rank among single-modal methods on the KITTI test set"
  ],
  "paper_id": "62c64f265aee126c0f6ccc5d",
  "title": "GLENet: Boosting 3D Object Detectors with Generative Label Uncertainty\n  Estimation",
  "abstract": "  The inherent ambiguity in ground-truth annotations of 3D bounding boxes caused by occlusions, signal missing, or manual annotation errors can confuse deep 3D object detectors during training, thus deteriorating the detection accuracy. However, existing methods overlook such issues to some extent and treat the labels as deterministic. In this paper, we formulate the label uncertainty problem as the diversity of potentially plausible bounding boxes of objects, then propose GLENet, a generative framework adapted from conditional variational autoencoders, to model the one-to-many relationship between a typical 3D object and its potential ground-truth bounding boxes with latent variables. The label uncertainty generated by GLENet is a plug-and-play module and can be conveniently integrated into existing deep 3D detectors to build probabilistic detectors and supervise the learning of the localization uncertainty. Besides, we propose an uncertainty-aware quality estimator architecture in probabilistic detectors to guide the training of IoU-branch with predicted localization uncertainty. We incorporate the proposed methods into various popular base 3D detectors and demonstrate significant and consistent performance gains on both KITTI and Waymo benchmark datasets. Especially, the proposed GLENet-VR outperforms all published LiDAR-based approaches by a large margin and ranks $1^{st}$ among single-modal methods on the challenging KITTI test set. The code is available at https://github.com/Eaphan/GLENet. "
}