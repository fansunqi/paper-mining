{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Euclidean TSP"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Exact algorithm with $2^{O(n^{1-1/d})}$ running time"
  ],
  "results": [
    "Settles the complexity of Euclidean TSP",
    "Shows no $2^{o(n^{1-1/d})}$ algorithm exists unless ETH fails"
  ],
  "paper_id": "5f04e124dfae54570ec51c3b",
  "title": "An ETH-Tight Exact Algorithm for Euclidean TSP",
  "abstract": "  We study exact algorithms for Euclidean TSP in $\\mathbb{R}^d$. In the early 1990s algorithms with $n^{O(\\sqrt{n})}$ running time were presented for the planar case, and some years later an algorithm with $n^{O(n^{1-1/d})}$ running time was presented for any $d\\geq 2$. Despite significant interest in subexponential exact algorithms over the past decade, there has been no progress on Euclidean TSP, except for a lower bound stating that the problem admits no $2^{O(n^{1-1/d-\\epsilon})}$ algorithm unless ETH fails. Up to constant factors in the exponent, we settle the complexity of Euclidean TSP by giving a $2^{O(n^{1-1/d})}$ algorithm and by showing that a $2^{o(n^{1-1/d})}$ algorithm does not exist unless ETH fails. "
}