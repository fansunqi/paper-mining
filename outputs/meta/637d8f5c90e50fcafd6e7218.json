{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Modal Lambda-Calculus",
    "Normalization Proof",
    "Multi-staged Meta-programming",
    "Dependently Typed Foundation for Meta-programming"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Normalization by Evaluation (NbE) algorithm",
    "Kripke-style substitutions on context stacks",
    "Structural modal transformations on context stacks",
    "Substitutions for individual assumptions",
    "Contextual types representation"
  ],
  "results": [
    "NbE algorithm is sound and complete",
    "Lays the foundation for extending the logical foundation towards building a practical, dependently typed foundation for meta-programming"
  ],
  "paper_id": "637d8f5c90e50fcafd6e7218",
  "title": "A Categorical Normalization Proof for the Modal Lambda-Calculus",
  "abstract": "  We investigate a simply typed modal $\\lambda$-calculus, $\\lambda^{\\to\\square}$, due to Pfenning, Wong and Davies, where we define a well-typed term with respect to a context stack that captures the possible world semantics in a syntactic way. It provides logical foundation for multi-staged meta-programming. Our main contribution in this paper is a normalization by evaluation (NbE) algorithm for $\\lambda^{\\to\\square}$ which we prove sound and complete. The NbE algorithm is a moderate extension to the standard presheaf model of simply typed $\\lambda$-calculus. However, central to the model construction and the NbE algorithm is the observation of Kripke-style substitutions on context stacks which brings together two previously separate concepts, structural modal transformations on context stacks and substitutions for individual assumptions. Moreover, Kripke-style substitutions allow us to give a formulation for contextual types, which can represent open code in a meta-programming setting. Our work lays the foundation for extending the logical foundation by Pfenning, Wong, and Davies towards building a practical, dependently typed foundation for meta-programming. "
}