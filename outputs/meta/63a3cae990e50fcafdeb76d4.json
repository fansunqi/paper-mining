{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Bayesian Compiler Optimization"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Bayesian optimization algorithms",
    "autotuning"
  ],
  "results": [
    "Average 1.36x-1.56x faster code",
    "Expert-level performance 2.9x-3.9x faster"
  ],
  "paper_id": "63a3cae990e50fcafdeb76d4",
  "title": "BaCO: A Fast and Portable Bayesian Compiler Optimization Framework",
  "abstract": "  We introduce the Bayesian Compiler Optimization framework (BaCO), a general purpose autotuner for modern compilers targeting CPUs, GPUs, and FPGAs. BaCO provides the flexibility needed to handle the requirements of modern autotuning tasks. Particularly, it deals with permutation, ordered, and continuous parameter types along with both known and unknown parameter constraints. To reason about these parameter types and efficiently deliver high-quality code, BaCO uses Bayesian optimiza tion algorithms specialized towards the autotuning domain. We demonstrate BaCO's effectiveness on three modern compiler systems: TACO, RISE & ELEVATE, and HPVM2FPGA for CPUs, GPUs, and FPGAs respectively. For these domains, BaCO outperforms current state-of-the-art autotuners by delivering on average 1.36x-1.56x faster code with a tiny search budget, and BaCO is able to reach expert-level performance 2.9x-3.9x faster. "
}