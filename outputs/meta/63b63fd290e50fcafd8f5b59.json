{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Compliant constrained dynamics simulation"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "DiffXPBD"
  ],
  "results": [
    "Efficient differentiable simulation",
    "High resolution geometries and degrees of freedom",
    "Collisions included",
    "Additional optimization variables",
    "Automatic differentiation",
    "Elastic material parameter estimation",
    "Initial value optimization",
    "Body shape and pose optimization from clothing",
    "Time-varying external force sequence optimization",
    "26 million degrees of freedom optimization",
    "Modern CPU and GPU compatibility"
  ],
  "paper_id": "63b63fd290e50fcafd8f5b59",
  "title": "DiffXPBD : Differentiable Position-Based Simulation of Compliant\n  Constraint Dynamics",
  "abstract": "  We present DiffXPBD, a novel and efficient analytical formulation for the differentiable position-based simulation of compliant constrained dynamics (XPBD). Our proposed method allows computation of gradients of numerous parameters with respect to a goal function simultaneously leveraging a performant simulation model. The method is efficient, thus enabling differentiable simulations of high resolution geometries and degrees of freedom (DoFs). Collisions are naturally included in the framework. Our differentiable model allows a user to easily add additional optimization variables. Every control variable gradient requires the computation of only a few partial derivatives which can be computed using automatic differentiation code. We demonstrate the efficacy of the method with examples such as elastic material parameter estimation, initial value optimization, optimizing for underlying body shape and pose by only observing the clothing, and optimizing a time-varying external force sequence to match sparse keyframe shapes at specific times. Our approach demonstrates excellent efficiency and we demonstrate this on high resolution meshes with optimizations involving over 26 million degrees of freedom. Making an existing solver differentiable requires only a few modifications and the model is compatible with both modern CPU and GPU multi-core hardware. "
}