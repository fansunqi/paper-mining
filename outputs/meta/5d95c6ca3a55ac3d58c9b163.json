{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Coded Elastic Computing",
    "Minimizing Transition Waste in Distributed Computing"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Transition Waste Optimization",
    "Cyclic Task Allocation Scheme",
    "Finite Geometry Solution"
  ],
  "results": [
    "Efficient method to minimize transition waste",
    "Zero transition waste with varying active machines within a fixed range"
  ],
  "paper_id": "5d95c6ca3a55ac3d58c9b163",
  "title": "Transition Waste Optimization for Coded Elastic Computing",
  "abstract": "  Distributed computing, in which a resource-intensive task is divided into subtasks and distributed among different machines, plays a key role in solving large-scale problems. Coded computing is a recently emerging paradigm where redundancy for distributed computing is introduced to alleviate the impact of slow machines (stragglers) on the completion time. We investigate coded computing solutions over elastic resources, where the set of available machines may change in the middle of the computation. This is motivated by recently available services in the cloud computing industry (e.g., EC2 Spot, Azure Batch) where low-priority virtual machines are offered at a fraction of the price of the on-demand instances but can be preempted on short notice. Our contributions are three-fold. We first introduce a new concept called transition waste that quantifies the number of tasks existing machines must abandon or take over when a machine joins/leaves. We then develop an efficient method to minimize the transition waste for the cyclic task allocation scheme recently proposed in the literature (Yang et al. ISIT'19). Finally, we establish a novel solution based on finite geometry achieving zero transition wastes given that the number of active machines varies within a fixed range. "
}