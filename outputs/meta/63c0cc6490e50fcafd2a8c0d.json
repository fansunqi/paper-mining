{
  "code_links": [
    "https://github.com/ReaFly/LDNet"
  ],
  "tasks": [
    "Polyp Segmentation"
  ],
  "datasets": [
    "Public polyp benchmarks",
    "Collected large-scale polyp dataset"
  ],
  "methods": [
    "Lesion-aware dynamic network (LDNet)",
    "Dynamic kernel generation and updating scheme",
    "Lesion-aware cross-attention module (LCA)",
    "Efficient self-attention module (ESA)"
  ],
  "results": [
    "Superior performance compared with other state-of-the-art approaches"
  ],
  "paper_id": "63c0cc6490e50fcafd2a8c0d",
  "title": "Lesion-aware Dynamic Kernel for Polyp Segmentation",
  "abstract": "  Automatic and accurate polyp segmentation plays an essential role in early colorectal cancer diagnosis. However, it has always been a challenging task due to 1) the diverse shape, size, brightness and other appearance characteristics of polyps, 2) the tiny contrast between concealed polyps and their surrounding regions. To address these problems, we propose a lesion-aware dynamic network (LDNet) for polyp segmentation, which is a traditional u-shape encoder-decoder structure incorporated with a dynamic kernel generation and updating scheme. Specifically, the designed segmentation head is conditioned on the global context features of the input image and iteratively updated by the extracted lesion features according to polyp segmentation predictions. This simple but effective scheme endows our model with powerful segmentation performance and generalization capability. Besides, we utilize the extracted lesion representation to enhance the feature contrast between the polyp and background regions by a tailored lesion-aware cross-attention module (LCA), and design an efficient self-attention module (ESA) to capture long-range context relations, further improving the segmentation accuracy. Extensive experiments on four public polyp benchmarks and our collected large-scale polyp dataset demonstrate the superior performance of our method compared with other state-of-the-art approaches. The source code is available at https://github.com/ReaFly/LDNet. "
}