{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Proving linearizability of concurrent data structures"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Temporal interpolation",
    "Concurrent separation logic"
  ],
  "results": [
    "Formal proof of the LO-tree",
    "Revealed an unknown bug and an erroneous informal proof"
  ],
  "paper_id": "63350ce690e50fcafd350a94",
  "title": "Embedding Hindsight Reasoning in Separation Logic",
  "abstract": "  Proving linearizability of concurrent data structures remains a key challenge for verification. We present temporal interpolation as a new proof principle to conduct such proofs using hindsight arguments within concurrent separation logic. Temporal reasoning offers an easy-to-use alternative to prophecy variables and has the advantage of structuring proofs into easy-to-discharge hypotheses. To hindsight theory, our work brings the formal rigor and proof machinery of concurrent program logics. We substantiate the usefulness of our development by verifying the linearizability of the Logical Ordering (LO-)tree and RDCSS. Both of these involve complex proof arguments due to future-dependent linearization points. The LO-tree additionally features complex structure overlays. Our proof of the LO-tree is the first formal proof of this data structure. Interestingly, our formalization revealed an unknown bug and an existing informal proof as erroneous. "
}