{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Approximate string matching",
    "Bioinformatics applications"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Matching statistics",
    "Compressed suffix tree",
    "LCP array",
    "Wheeler deterministic finite automata"
  ],
  "results": [
    "None"
  ],
  "paper_id": "63c4c02990e50fcafdadff6c",
  "title": "Computing matching statistics on Wheeler DFAs",
  "abstract": "  Matching statistics were introduced to solve the approximate string matching problem, which is a recurrent subroutine in bioinformatics applications. In 2010, Ohlebusch et al. [SPIRE 2010] proposed a time and space efficient algorithm for computing matching statistics which relies on some components of a compressed suffix tree - notably, the longest common prefix (LCP) array. In this paper, we show how their algorithm can be generalized from strings to Wheeler deterministic finite automata. Most importantly, we introduce a notion of LCP array for Wheeler automata, thus establishing a first clear step towards extending (compressed) suffix tree functionalities to labeled graphs. "
}