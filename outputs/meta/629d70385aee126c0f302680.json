{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Inductive Logic Programming"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Combining small non-separable programs",
    "Constraint-driven ILP system",
    "Predicate invention"
  ],
  "results": [
    "Drastically outperform existing approaches in predictive accuracies and learning times",
    "Reducing learning times from over an hour to a few seconds"
  ],
  "paper_id": "629d70385aee126c0f302680",
  "title": "Learning programs by combining programs",
  "abstract": "  The goal of inductive logic programming is to induce a logic program (a set of logical rules) that generalises training examples. Inducing programs with many rules and literals is a major challenge. To tackle this challenge, we introduce an approach where we learn small non-separable programs and combine them. We implement our approach in a constraint-driven ILP system. Our approach can learn optimal and recursive programs and perform predicate invention. Our experiments on multiple domains, including game playing and program synthesis, show that our approach can drastically outperform existing approaches in terms of predictive accuracies and learning times, sometimes reducing learning times from over an hour to a few seconds. "
}