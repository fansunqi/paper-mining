{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Church Synthesis on Register Automata",
    "One-sided Church Games"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Register Automata over Linearly Ordered Data Domains",
    "One-sided Church Games with Eve operating over a finite alphabet"
  ],
  "results": [
    "Church games over (N,<) are undecidable for deterministic register automata",
    "One-sided Church games are determined",
    "Deciding the existence of a winning strategy is in ExpTime for Q and N",
    "Application to transducer synthesis problem"
  ],
  "paper_id": "5ea8009091e0111d387ee65e",
  "title": "Church Synthesis on Register Automata over Linearly Ordered Data Domains",
  "abstract": "  In a Church synthesis game, two players, Adam and Eve, alternately picks some element in a finite alphabet, for an infinite number of rounds. The game is won by Eve if the omega-word formed by this infinite interaction belongs to a given language S, called specification. It is well-known that for omega-regular specifications, whether Eve as a strategy to enforce the specification no matter what Adam does, is a decidable problem. We study the extension of Church synthesis games to the linearly ordered data domains (Q,<) and (N,<). In this setting, the infinite interaction between Adam and Eve results in a data omega-word, i.e., an infinite sequence of elements in the domain.   We study this problem when specifications are given as register automata. They extend finite automata with a finite set of registers in which they can store data and with which they can compare incoming data with respect to the linear order. Church games over (N,<) are however undecidable, even for deterministic register automata. Thus, we introduce one-sided Church games, where Eve instead operates over a finite alphabet, while Adam still manipulates data. We show they are determined, and deciding the existence of a winning strategy is in ExpTime, both for Q and N. This follows from a study of constraint sequences, which abstract the behaviour of register automata, and allow us to reduce Church games to omega-regular games. We show an application of one-sided Church games to some transducer synthesis problem. In this application, a transducer models a reactive system (Eve) which outputs data stored in its registers, depending on its interaction with an environment (Adam) which inputs data to the system. "
}