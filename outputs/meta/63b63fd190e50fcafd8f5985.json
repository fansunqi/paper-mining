{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Autonomous Systems Testing"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Evolutionary Search",
    "Modular Architecture"
  ],
  "results": [
    "None"
  ],
  "paper_id": "63b63fd190e50fcafd8f5985",
  "title": "AmbieGen: A Search-based Framework for Autonomous Systems Testing",
  "abstract": "  Thorough testing of safety-critical autonomous systems, such as self-driving cars, autonomous robots, and drones, is essential for detecting potential failures before deployment. One crucial testing stage is model-in-the-loop testing, where the system model is evaluated by executing various scenarios in a simulator. However, the search space of possible parameters defining these test scenarios is vast, and simulating all combinations is computationally infeasible. To address this challenge, we introduce AmbieGen, a search-based test case generation framework for autonomous systems. AmbieGen uses evolutionary search to identify the most critical scenarios for a given system, and has a modular architecture that allows for the addition of new systems under test, algorithms, and search operators. Currently, AmbieGen supports test case generation for autonomous robots and autonomous car lane keeping assist systems. In this paper, we provide a high-level overview of the framework's architecture and demonstrate its practical use cases. "
}