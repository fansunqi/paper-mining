{
  "code_links": [
    "https://github.com/DingShizhe/NIERT"
  ],
  "tasks": [
    "Numerical Interpolation"
  ],
  "datasets": [
    "TFRD",
    "Mathit",
    "PhysioNet",
    "PTV"
  ],
  "methods": [
    "Transformer Encoder Representation"
  ],
  "results": [
    "4.3~14.3x lower MAE on TFRD subsets",
    "1.7/1.8/8.7x lower MSE on Mathit/PhysioNet/PTV datasets"
  ],
  "paper_id": "63292f6990e50fcafd2ec0b2",
  "title": "NIERT: Accurate Numerical Interpolation through Unifying Scattered Data\n  Representations using Transformer Encoder",
  "abstract": "  Interpolation for scattered data is a classical problem in numerical analysis, with a long history of theoretical and practical contributions. Recent advances have utilized deep neural networks to construct interpolators, exhibiting excellent and generalizable performance. However, they still fall short in two aspects: \\textbf{1) inadequate representation learning}, resulting from separate embeddings of observed and target points in popular encoder-decoder frameworks and \\textbf{2) limited generalization power}, caused by overlooking prior interpolation knowledge shared across different domains. To overcome these limitations, we present a \\textbf{N}umerical \\textbf{I}nterpolation approach using \\textbf{E}ncoder \\textbf{R}epresentation of \\textbf{T}ransformers (called \\textbf{NIERT}). On one hand, NIERT utilizes an encoder-only framework rather than the encoder-decoder structure. This way, NIERT can embed observed and target points into a unified encoder representation space, thus effectively exploiting the correlations among them and obtaining more precise representations. On the other hand, we propose to pre-train NIERT on large-scale synthetic mathematical functions to acquire prior interpolation knowledge, and transfer it to multiple interpolation domains with consistent performance gain. On both synthetic and real-world datasets, NIERT outperforms the existing approaches by a large margin, i.e., 4.3$\\sim$14.3$\\times$ lower MAE on TFRD subsets, and 1.7/1.8/8.7$\\times$ lower MSE on Mathit/PhysioNet/PTV datasets. The source code of NIERT is available at https://github.com/DingShizhe/NIERT. "
}