{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Attributed network embedding"
  ],
  "datasets": [
    "8 real datasets"
  ],
  "methods": [
    "PANE: novel random walk model, efficient solver with careful initialization, multi-core CPU parallelization",
    "PANE++: extended version for large networks with numerous attributes"
  ],
  "results": [
    "PANE and PANE++ outperform all existing methods in result quality",
    "Orders of magnitude faster than existing methods"
  ],
  "paper_id": "5f50bbe991e01182e69239f5",
  "title": "PANE: scalable and effective attributed network embedding",
  "abstract": "  Given a graph G where each node is associated with a set of attributes, attributed network embedding (ANE) maps each node v in G to a compact vector Xv, which can be used in downstream machine learning tasks. Ideally, Xv should capture node v's affinity to each attribute, which considers not only v's own attribute associations, but also those of its connected nodes along edges in G. It is challenging to obtain high-utility embeddings that enable accurate predictions; scaling effective ANE computation to massive graphs pushes the difficulty of the problem to a whole new level. Existing solutions largely fail on such graphs, leading to prohibitive costs, low-quality embeddings, or both. This paper proposes PANE, an effective and scalable approach to ANE computation for massive graphs that achieves state-of-the-art result quality on multiple benchmark datasets. PANE obtains high scalability and effectiveness through 3 main algorithmic designs. First, it formulates the learning objective based on a novel random walk model for attributed networks. Second, PANE includes a highly efficient solver for the above optimization problem, whose key module is a carefully designed initialization of the embeddings, which drastically reduces the number of iterations required to converge. Finally, PANE utilizes multi-core CPUs through non-trivial parallelization of the above solver, which achieves scalability while retaining the high quality of the resulting embeddings. The performance of PANE depends upon the number of attributes in the input network. To handle large networks with numerous attributes, we further extend PANE to PANE++. Extensive experiments, comparing 10 existing approaches on 8 real datasets, demonstrate that PANE and PANE++ consistently outperform all existing methods in terms of result quality, while being orders of magnitude faster. "
}