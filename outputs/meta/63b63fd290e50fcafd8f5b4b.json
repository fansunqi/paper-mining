{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Graph processing"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Actor model"
  ],
  "results": [
    "Actor-based implementations outperform dedicated graph processing systems and benchmark serial implementations"
  ],
  "paper_id": "63b63fd290e50fcafd8f5b4b",
  "title": "COST of Graph Processing Using Actors",
  "abstract": "  Graph processing is an increasingly important domain of computer science, with applications in data and network analysis, among others. Target graphs in these applications are often large, leading to the creation of \"big data\" systems designed to provide the scalability needed to analyze these graphs using parallel processing. However, researchers have shown that while these systems often provide scalability, they also often introduce overheads that exceed the benefits they provide, sometimes resulting in lower absolute performance than even simple serial implementations. This report studies the viability and performance of the actor model to implement scalable concurrent programs to perform common graph computations. We show that relatively simple actor-based implementations outperform both dedicated graph processing systems and the benchmark serial implementations. "
}