{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Abstraction of probabilistic and dynamic systems"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Bisimulation for abstracting probabilistic basic action theory",
    "Translation of abstract Golog programs to detailed programs"
  ],
  "results": [
    "Simplifies implementation of noisy robot programs",
    "Enables non-stochastic reasoning on probabilistic problems",
    "Provides more understandable and explainable domain descriptions"
  ],
  "paper_id": "624fa8ef5aee126c0f3a7d9f",
  "title": "Abstracting Noisy Robot Programs",
  "abstract": "  Abstraction is a commonly used process to represent some low-level system by a more coarse specification with the goal to omit unnecessary details while preserving important aspects. While recent work on abstraction in the situation calculus has focused on non-probabilistic domains, we describe an approach to abstraction of probabilistic and dynamic systems. Based on a variant of the situation calculus with probabilistic belief, we define a notion of bisimulation that allows to abstract a detailed probabilistic basic action theory with noisy actuators and sensors by a possibly non-stochastic basic action theory. By doing so, we obtain abstract Golog programs that omit unnecessary details and which can be translated back to a detailed program for actual execution. This simplifies the implementation of noisy robot programs, opens up the possibility of using non-stochastic reasoning methods (e.g., planning) on probabilistic problems, and provides domain descriptions that are more easily understandable and explainable. "
}