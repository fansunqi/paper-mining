{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Architecture optimization",
    "Software architecture refactoring"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Genetic algorithms"
  ],
  "results": [
    "None"
  ],
  "paper_id": "63c8b59590e50fcafd90bc0a",
  "title": "Multi-objective Software Architecture Refactoring driven by Quality\n  Attributes",
  "abstract": "Architecture optimization is the process of automatically generating design\noptions, typically to enhance software's quantifiable quality attributes, such\nas performance and reliability. Multi-objective optimization approaches have\nbeen used in this situation to assist the designer in selecting appropriate\ntrade-offs between a number of non-functional features. Through automated\nrefactoring, design alternatives can be produced in this process, and assessed\nusing non-functional models.\n  This type of optimization tasks are hard and time- and resource-intensive,\nwhich frequently hampers their use in software engineering procedures.\n  In this paper, we present our optimization framework where we examined the\nperformance of various genetic algorithms. We also exercised our framework with\ntwo case studies with various levels of size, complexity, and domain served as\nour test subjects."
}