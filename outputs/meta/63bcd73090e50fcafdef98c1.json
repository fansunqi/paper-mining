{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Collaborative Bug Finding"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "BugRMSys",
    "DistilBERT",
    "Natural language text embeddings"
  ],
  "results": [
    "Identified, reproduced, and reported 20 new bugs",
    "9 reports triaged, 6 confirmed, 4 fixed by official teams"
  ],
  "paper_id": "63bcd73090e50fcafdef98c1",
  "title": "App Review Driven Collaborative Bug Finding",
  "abstract": "  Software development teams generally welcome any effort to expose bugs in their code base. In this work, we build on the hypothesis that mobile apps from the same category (e.g., two web browser apps) may be affected by similar bugs in their evolution process. It is therefore possible to transfer the experience of one historical app to quickly find bugs in its new counterparts. This has been referred to as collaborative bug finding in the literature. Our novelty is that we guide the bug finding process by considering that existing bugs have been hinted within app reviews. Concretely, we design the BugRMSys approach to recommend bug reports for a target app by matching historical bug reports from apps in the same category with user app reviews of the target app. We experimentally show that this approach enables us to quickly expose and report dozens of bugs for targeted apps such as Brave (web browser app). BugRMSys's implementation relies on DistilBERT to produce natural language text embeddings. Our pipeline considers similarities between bug reports and app reviews to identify relevant bugs. We then focus on the app review as well as potential reproduction steps in the historical bug report (from a same-category app) to reproduce the bugs.   Overall, after applying BugRMSys to six popular apps, we were able to identify, reproduce and report 20 new bugs: among these, 9 reports have been already triaged, 6 were confirmed, and 4 have been fixed by official development teams, respectively. "
}