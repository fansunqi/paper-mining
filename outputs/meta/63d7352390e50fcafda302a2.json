{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Optimal solution search",
    "Feasible action generation"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Actor training",
    "Kernel density estimates",
    "Resampling",
    "Importance sampling",
    "Auxiliary critic"
  ],
  "results": [
    "Learns to visit all modes in feasible action space"
  ],
  "paper_id": "63d7352390e50fcafda302a2",
  "title": "Learning to Generate All Feasible Actions",
  "abstract": "  Several machine learning (ML) applications are characterized by searching for an optimal solution to a complex task. The search space for this optimal solution is often very large, so large in fact that this optimal solution is often not computable. Part of the problem is that many candidate solutions found via ML are actually infeasible and have to be discarded. Restricting the search space to only the feasible solution candidates simplifies finding an optimal solution for the tasks. Further, the set of feasible solutions could be re-used in multiple problems characterized by different tasks. In particular, we observe that complex tasks can be decomposed into subtasks and corresponding skills. We propose to learn a reusable and transferable skill by training an actor to generate all feasible actions. The trained actor can then propose feasible actions, among which an optimal one can be chosen according to a specific task. The actor is trained by interpreting the feasibility of each action as a target distribution. The training procedure minimizes a divergence of the actor's output distribution to this target. We derive the general optimization target for arbitrary f-divergences using a combination of kernel density estimates, resampling, and importance sampling. We further utilize an auxiliary critic to reduce the interactions with the environment. A preliminary comparison to related strategies shows that our approach learns to visit all the modes in the feasible action space, demonstrating the framework's potential for learning skills that can be used in various downstream tasks. "
}