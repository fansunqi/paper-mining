{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Studying Student Perceptions of Software Modelling"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "multiple case study",
    "21 semi-structured interviews",
    "in-vivo coding",
    "thematic analysis"
  ],
  "results": [
    "Students see some benefits of modelling",
    "several factors negatively influence their understanding of modelling",
    "findings help in understanding why students struggle with software modelling",
    "recommendations for educators to improve education and training in software modelling"
  ],
  "paper_id": "62e350195aee126c0fba903f",
  "title": "We Do Not Understand What It Says - Studying Student Perceptions of\n  Software Modelling",
  "abstract": "  Background: Despite the potential benefits of software modelling, developers have shown a considerable reluctance towards its application. There is substantial existing research studying industrial use and technical challenges of modelling. However, there is a lack of detailed empirical work investigating how students perceive modelling. Aim: We investigate the perceptions of students towards modelling in a university environment. Method: We conducted a multiple case study with 5 cases (5 courses from 3 universities) and two units of analysis (student and instructor). We collected data through 21 semi-structured interviews, which we analysed using in-vivo coding and thematic analysis. Results: Students see some benefits of modelling, e.g., using models for planning and communicating within the group. However, several factors negatively influence their understanding of modelling, e.g., assignments with unclear expectations, irregular and insufficient feedback on their models, and lack of experience with the problem domains. Conclusions: Our findings help in understanding better why students struggle with software modelling, and might be reluctant to adopt it later on. This could help to improve education and training in software modelling, both at university and in industry. Specifically, we recommend that educators try to provide feedback beyond syntactical issues, and to consider using problem domains that students are knowledgeable about. "
}