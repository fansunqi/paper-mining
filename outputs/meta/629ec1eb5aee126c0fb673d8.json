{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Nonsmooth automatic differentiation complexity"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Conservative gradient model",
    "Backpropagation",
    "Clarke subdifferential"
  ],
  "results": [
    "Backward mode complexity independent of dimension",
    "Nonsmooth backpropagation cheapness",
    "NP-hard problem in subgradient finding"
  ],
  "paper_id": "629ec1eb5aee126c0fb673d8",
  "title": "On the complexity of nonsmooth automatic differentiation",
  "abstract": "  Using the notion of conservative gradient, we provide a simple model to estimate the computational costs of the backward and forward modes of algorithmic differentiation for a wide class of nonsmooth programs. The overhead complexity of the backward mode turns out to be independent of the dimension when using programs with locally Lipschitz semi-algebraic or definable elementary functions. This considerably extends Baur-Strassen's smooth cheap gradient principle. We illustrate our results by establishing fast backpropagation results of conservative gradients through feedforward neural networks with standard activation and loss functions. Nonsmooth backpropagation's cheapness contrasts with concurrent forward approaches, which have, to this day, dimensional-dependent worst-case overhead estimates. We provide further results suggesting the superiority of backward propagation of conservative gradients. Indeed, we relate the complexity of computing a large number of directional derivatives to that of matrix multiplication, and we show that finding two subgradients in the Clarke subdifferential of a function is an NP-hard problem. "
}