{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Understanding interactions between input data and software configurations"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Large empirical study over 8 configurable systems"
  ],
  "results": [
    "Inputs interact with configurations in non-monotonous ways",
    "Tuning for input data can multiply performance by up to ten",
    "Input variability can jeopardize performance predictive models"
  ],
  "paper_id": "61b95d2d5244ab9dcbf14ecf",
  "title": "The Interaction between Inputs and Configurations fed to Software\n  Systems: an Empirical Study",
  "abstract": "  Widely used software systems such as video encoders are by necessity highly configurable, with hundreds or even thousands of options to choose from. Their users often have a hard time finding suitable values for these options (i.e. finding a proper configuration of the software system) to meet their goals for the tasks at hand, e.g. compress a video down to a certain size. One dimension of the problem is of course that performance depends on the input data: a video as input to an encoder like x264 or a file system fed to a tool like xz. To achieve good performance, users should therefore take into account both dimensions of (1) software variability and (2) input data. In this problem-statement paper, we conduct a large study over 8 configurable systems that quantifies the existing interactions between input data and configurations of software systems. The results exhibit that (1) inputs fed to software systems interact with their configuration options in non monotonous ways, significantly impacting their performance properties (2) tuning a software system for its input data makes it possible to multiply its performance by up to ten (3) input variability can jeopardize the relevance of performance predictive models for a field deployment. "
}