{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Building Load Forecasting"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Building-to-Building Transfer Learning",
    "Transformer model"
  ],
  "results": [
    "Forecasting accuracy improved by 56.8%",
    "Root mean square error reduced to 0.009 for Transformer model"
  ],
  "paper_id": "63d340e990e50fcafd910ccf",
  "title": "Transfer Learning in Deep Learning Models for Building Load Forecasting:\n  Case of Limited Data",
  "abstract": "  Precise load forecasting in buildings could increase the bill savings potential and facilitate optimized strategies for power generation planning. With the rapid evolution of computer science, data-driven techniques, in particular the Deep Learning models, have become a promising solution for the load forecasting problem. These models have showed accurate forecasting results; however, they need abundance amount of historical data to maintain the performance. Considering the new buildings and buildings with low resolution measuring equipment, it is difficult to get enough historical data from them, leading to poor forecasting performance. In order to adapt Deep Learning models for buildings with limited and scarce data, this paper proposes a Building-to-Building Transfer Learning framework to overcome the problem and enhance the performance of Deep Learning models. The transfer learning approach was applied to a new technique known as Transformer model due to its efficacy in capturing data trends. The performance of the algorithm was tested on a large commercial building with limited data. The result showed that the proposed approach improved the forecasting accuracy by 56.8% compared to the case of conventional deep learning where training from scratch is used. The paper also compared the proposed Transformer model to other sequential deep learning models such as Long-short Term Memory (LSTM) and Recurrent Neural Network (RNN). The accuracy of the transformer model outperformed other models by reducing the root mean square error to 0.009, compared to LSTM with 0.011 and RNN with 0.051. "
}