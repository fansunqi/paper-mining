{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Dynamic Decentralized System"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "DNA Programming",
    "Blockchain-based structure"
  ],
  "results": [
    "None"
  ],
  "paper_id": "63881b9290e50fcafd3db2c1",
  "title": "Agent-Cells with DNA Programming: A Dynamic Decentralized System",
  "abstract": "  This paper introduces a new concept. We intend to give life to a software agent. A software agent is a computer program that acts on a user's behalf. We put a DNA inside the agent. DNA is a simple text, a whole roadmap of a network of agents or a system with details. A Dynamic Numerical Abstract of a multiagent system. It is also a reproductive part for an \\emph{agent} that makes the agent take actions and decide independently and reproduce coworkers. By defining different DNA structures, one can establish new agents and different nets for different usages. We initiate such thinking as \\emph{DNA programming}. This strategy leads to a new field of programming. This type of programming can help us manage large systems with various elements with an incredibly organized customizable structure. An agent can reproduce another agent. We put one or a few agents around a given network, and the agents will reproduce themselves till they can reach others and pervade the whole network. An agent's position or other environmental or geographical characteristics make it possible for an agent to know its active set of \\emph{genes} on its DNA. The active set of genes specifies its duties. There is a database that includes a list of functions s.t. each one is an implementation of what a \\emph{gene} represents. To utilize a decentralized database, we may use a blockchain-based structure.   This design can adapt to a system that manages many static and dynamic networks. This network could be a distributed system, a decentralized system, a telecommunication network such as a 5G monitoring system, an IoT management system, or even an energy management system. The final system is the combination of all the agents and the overlay net that connects the agents. We denote the final net as the \\emph{body} of the system. "
}