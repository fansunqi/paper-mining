{
  "code_links": [
    "None"
  ],
  "tasks": [
    "Code summarization",
    "Code classification"
  ],
  "datasets": [
    "None"
  ],
  "methods": [
    "Code2Snapshot",
    "Snapshot-based representation"
  ],
  "results": [
    "Comparable performance to state-of-the-art representations",
    "Insignificant impact of obscuring input programs on performance"
  ],
  "paper_id": "6180ac495244ab9dcb794484",
  "title": "Code2Snapshot: Using Code Snapshots for Learning Representations of\n  Source Code",
  "abstract": "  There are several approaches for encoding source code in the input vectors of neural models. These approaches attempt to include various syntactic and semantic features of input programs in their encoding. In this paper, we investigate Code2Snapshot, a novel representation of the source code that is based on the snapshots of input programs. We evaluate several variations of this representation and compare its performance with state-of-the-art representations that utilize the rich syntactic and semantic features of input programs. Our preliminary study on the utility of Code2Snapshot in the code summarization and code classification tasks suggests that simple snapshots of input programs have comparable performance to state-of-the-art representations. Interestingly, obscuring input programs have insignificant impacts on the Code2Snapshot performance, suggesting that, for some tasks, neural models may provide high performance by relying merely on the structure of input programs. "
}